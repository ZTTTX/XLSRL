{'name': 'simple_add', 'function_bases': [{'name': '__simple_add__add', 'id': 'f0', 'kind': 'function', 'edges': [{'bit_width': 32, 'id': 'f0_p1_to_f0_3', 'source_id': 'f0_p1', 'target_id': 'f0_3', 'type': 'bits[32]'}, {'bit_width': 32, 'id': 'f0_p2_to_f0_3', 'source_id': 'f0_p2', 'target_id': 'f0_3', 'type': 'bits[32]'}, {'bit_width': 32, 'id': 'f0_3_to_f0_5', 'source_id': 'f0_3', 'target_id': 'f0_5', 'type': 'bits[32]'}, {'bit_width': 32, 'id': 'f0_4_to_f0_5', 'source_id': 'f0_4', 'target_id': 'f0_5', 'type': 'bits[32]'}, {'bit_width': 32, 'id': 'f0_5_to_f0_7', 'source_id': 'f0_5', 'target_id': 'f0_7', 'type': 'bits[32]'}, {'bit_width': 32, 'id': 'f0_6_to_f0_7', 'source_id': 'f0_6', 'target_id': 'f0_7', 'type': 'bits[32]'}], 'nodes': [{'attributes': {'delay_ps': 0, 'known_bits': '0bXXXX_XXXX_XXXX_XXXX_XXXX_XXXX_XXXX_XXXX', 'cycle': 0}, 'id': 'f0_p1', 'ir': 'x: bits[32] = param(x, id=1)', 'name': 'x', 'opcode': 'param'}, {'attributes': {'delay_ps': 0, 'known_bits': '0bXXXX_XXXX_XXXX_XXXX_XXXX_XXXX_XXXX_XXXX', 'cycle': 0}, 'id': 'f0_p2', 'ir': 'y: bits[32] = param(y, id=2)', 'name': 'y', 'opcode': 'param'}, {'attributes': {'delay_ps': 1, 'known_bits': '0bXXXX_XXXX_XXXX_XXXX_XXXX_XXXX_XXXX_XXXX', 'cycle': 0}, 'id': 'f0_3', 'ir': 'add.3: bits[32] = add(x: bits[32], y: bits[32], id=3, pos=[(0,1,4)])', 'name': 'add.3', 'opcode': 'add'}, {'attributes': {'value': '0x1', 'delay_ps': 1, 'known_bits': '0b0000_0000_0000_0000_0000_0000_0000_0001', 'on_critical_path': True, 'cycle': 0}, 'id': 'f0_4', 'ir': 'literal.4: bits[32] = literal(value=1, id=4, pos=[(0,1,14)])', 'name': 'literal.4', 'opcode': 'literal'}, {'attributes': {'delay_ps': 1, 'known_bits': '0bXXXX_XXXX_XXXX_XXXX_XXXX_XXXX_XXXX_XXXX', 'on_critical_path': True, 'cycle': 0}, 'id': 'f0_5', 'ir': 'add.5: bits[32] = add(add.3: bits[32], literal.4: bits[32], id=5, pos=[(0,1,8)])', 'name': 'add.5', 'opcode': 'add'}, {'attributes': {'value': '0x1', 'delay_ps': 1, 'known_bits': '0b0000_0000_0000_0000_0000_0000_0000_0001', 'cycle': 0}, 'id': 'f0_6', 'ir': 'literal.6: bits[32] = literal(value=1, id=6, pos=[(0,1,22)])', 'name': 'literal.6', 'opcode': 'literal'}, {'attributes': {'delay_ps': 1, 'known_bits': '0bXXXX_XXXX_XXXX_XXXX_XXXX_XXXX_XXXX_XXXX', 'on_critical_path': True, 'cycle': 0}, 'id': 'f0_7', 'ir': 'add.7: bits[32] = add(add.5: bits[32], literal.6: bits[32], id=7, pos=[(0,1,16)])', 'name': 'add.7', 'opcode': 'add'}]}], 'ir_html': 'package simple_add\n\nfile_number 0 "tutorial/simple_add.x"\n\n<span id="ir-function-f0" class="ir-function">top fn <span id="ir-function-def-f0" class="ir-function-identifier" data-identifier="f0">__simple_add__add</span>(<span id="ir-node-def-f0_p1" class="ir-node-identifier ir-node-identifier-f0_p1" data-node-id="f0_p1" data-function-id="f0">x</span>: bits[32], <span id="ir-node-def-f0_p2" class="ir-node-identifier ir-node-identifier-f0_p2" data-node-id="f0_p2" data-function-id="f0">y</span>: bits[32]) -> bits[32] {\n  <span id="ir-node-def-f0_3" class="ir-node-identifier ir-node-identifier-f0_3" data-node-id="f0_3" data-function-id="f0">add.3</span>: bits[32] = add(<span class="ir-node-identifier ir-node-identifier-f0_p1 ir-edge-f0_p1-f0_3" data-node-id="f0_p1" data-function-id="f0">x</span>, <span class="ir-node-identifier ir-node-identifier-f0_p2 ir-edge-f0_p2-f0_3" data-node-id="f0_p2" data-function-id="f0">y</span>, id=3, pos=[(0,1,4)])\n  <span id="ir-node-def-f0_4" class="ir-node-identifier ir-node-identifier-f0_4" data-node-id="f0_4" data-function-id="f0">literal.4</span>: bits[32] = literal(value=1, id=4, pos=[(0,1,14)])\n  <span id="ir-node-def-f0_5" class="ir-node-identifier ir-node-identifier-f0_5" data-node-id="f0_5" data-function-id="f0">add.5</span>: bits[32] = add(<span class="ir-node-identifier ir-node-identifier-f0_3 ir-edge-f0_3-f0_5" data-node-id="f0_3" data-function-id="f0">add.3</span>, <span class="ir-node-identifier ir-node-identifier-f0_4 ir-edge-f0_4-f0_5" data-node-id="f0_4" data-function-id="f0">literal.4</span>, id=5, pos=[(0,1,8)])\n  <span id="ir-node-def-f0_6" class="ir-node-identifier ir-node-identifier-f0_6" data-node-id="f0_6" data-function-id="f0">literal.6</span>: bits[32] = literal(value=1, id=6, pos=[(0,1,22)])\n  ret <span id="ir-node-def-f0_7" class="ir-node-identifier ir-node-identifier-f0_7" data-node-id="f0_7" data-function-id="f0">add.7</span>: bits[32] = add(<span class="ir-node-identifier ir-node-identifier-f0_5 ir-edge-f0_5-f0_7" data-node-id="f0_5" data-function-id="f0">add.5</span>, <span class="ir-node-identifier ir-node-identifier-f0_6 ir-edge-f0_6-f0_7" data-node-id="f0_6" data-function-id="f0">literal.6</span>, id=7, pos=[(0,1,16)])\n}</span>\n', 'entry_id': 'f0'}
