package my_package

file_number 1 "././work_space/test.cc"

top fn e_graph_test(x: bits[32], y: bits[32], z: bits[32], a: bits[32], b: bits[32], c: bits[32]) -> bits[32] {
  bit_slice.129: bits[31] = bit_slice(x, start=0, width=31, id=129)
  bit_slice.130: bits[31] = bit_slice(y, start=0, width=31, id=130)
  bit_slice.132: bits[31] = bit_slice(z, start=1, width=31, id=132)
  add.131: bits[31] = add(bit_slice.129, bit_slice.130, id=131)
  add.134: bits[31] = add(bit_slice.132, add.131, id=134)
  bit_slice.135: bits[1] = bit_slice(z, start=0, width=1, id=135)
  concat.136: bits[32] = concat(add.134, bit_slice.135, id=136)
  add.127: bits[32] = add(a, c, id=127)
  ret add.128: bits[32] = add(concat.136, add.127, id=128)
}

block xls_test(clk: clock, x: bits[32], y: bits[32], z: bits[32], a: bits[32], b: bits[32], c: bits[32], out: bits[32]) {
  reg p0_x(bits[32])
  reg p0_y(bits[32])
  reg p0_z(bits[32])
  reg p0_a(bits[32])
  reg p0_c(bits[32])
  reg p1_add_159(bits[32])
  reg p1_add_157(bits[31])
  reg p1_bit_slice_156(bits[31])
  reg p1_bit_slice_158(bits[1])
  reg p2_add_159(bits[32])
  reg p2_concat_169(bits[32])
  reg p3_add_174(bits[32])
  x: bits[32] = input_port(name=x, id=138)
  y: bits[32] = input_port(name=y, id=139)
  z: bits[32] = input_port(name=z, id=140)
  a: bits[32] = input_port(name=a, id=141)
  b: bits[32] = input_port(name=b, id=143)
  c: bits[32] = input_port(name=c, id=142)
  register_write.144: () = register_write(x, register=p0_x, id=144)
  register_write.146: () = register_write(y, register=p0_y, id=146)
  register_write.148: () = register_write(z, register=p0_z, id=148)
  register_write.150: () = register_write(a, register=p0_a, id=150)
  register_write.152: () = register_write(c, register=p0_c, id=152)
  p0_x: bits[32] = register_read(register=p0_x, id=145)
  p0_y: bits[32] = register_read(register=p0_y, id=147)
  p0_z: bits[32] = register_read(register=p0_z, id=149)
  p0_a: bits[32] = register_read(register=p0_a, id=151)
  p0_c: bits[32] = register_read(register=p0_c, id=153)
  bit_slice.154: bits[31] = bit_slice(p0_x, start=0, width=31, id=154)
  bit_slice.155: bits[31] = bit_slice(p0_y, start=0, width=31, id=155)
  bit_slice.156: bits[31] = bit_slice(p0_z, start=1, width=31, id=156)
  add.157: bits[31] = add(bit_slice.154, bit_slice.155, id=157)
  bit_slice.158: bits[1] = bit_slice(p0_z, start=0, width=1, id=158)
  add.159: bits[32] = add(p0_a, p0_c, id=159)
  register_write.160: () = register_write(add.159, register=p1_add_159, id=160)
  register_write.162: () = register_write(add.157, register=p1_add_157, id=162)
  register_write.164: () = register_write(bit_slice.156, register=p1_bit_slice_156, id=164)
  register_write.166: () = register_write(bit_slice.158, register=p1_bit_slice_158, id=166)
  p1_add_159: bits[32] = register_read(register=p1_add_159, id=161)
  p1_add_157: bits[31] = register_read(register=p1_add_157, id=163)
  p1_bit_slice_156: bits[31] = register_read(register=p1_bit_slice_156, id=165)
  p1_bit_slice_158: bits[1] = register_read(register=p1_bit_slice_158, id=167)
  add.168: bits[31] = add(p1_bit_slice_156, p1_add_157, id=168)
  concat.169: bits[32] = concat(add.168, p1_bit_slice_158, id=169)
  register_write.170: () = register_write(p1_add_159, register=p2_add_159, id=170)
  register_write.172: () = register_write(concat.169, register=p2_concat_169, id=172)
  p2_add_159: bits[32] = register_read(register=p2_add_159, id=171)
  p2_concat_169: bits[32] = register_read(register=p2_concat_169, id=173)
  add.174: bits[32] = add(p2_concat_169, p2_add_159, id=174)
  register_write.175: () = register_write(add.174, register=p3_add_174, id=175)
  p3_add_174: bits[32] = register_read(register=p3_add_174, id=176)
  out: () = output_port(p3_add_174, name=out, id=177)
}
