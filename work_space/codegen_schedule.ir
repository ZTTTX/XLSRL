package my_package

file_number 1 "././work_space/test.cc"

top fn matrix_multiply(a: bits[32][2][2], b: bits[32][2][2], result: bits[32][2][2]) -> (bits[32][2][2], bits[32][2][2], bits[32][2][2]) {
  literal.1249: bits[1] = literal(value=0, id=1249, pos=[(1,10,7)])
  literal.1428: bits[1] = literal(value=0, id=1428, pos=[(1,10,7)])
  literal.1429: bits[1] = literal(value=0, id=1429, pos=[(1,10,7)])
  literal.1430: bits[1] = literal(value=0, id=1430, pos=[(1,10,7)])
  literal.1432: bits[1] = literal(value=0, id=1432, pos=[(1,10,7)])
  literal.1435: bits[1] = literal(value=1, id=1435, pos=[(1,10,7)])
  literal.1436: bits[1] = literal(value=1, id=1436, pos=[(1,10,7)])
  literal.1433: bits[1] = literal(value=0, id=1433, pos=[(1,10,7)])
  literal.1434: bits[1] = literal(value=0, id=1434, pos=[(1,10,7)])
  literal.1439: bits[1] = literal(value=1, id=1439, pos=[(1,10,7)])
  literal.1440: bits[1] = literal(value=1, id=1440, pos=[(1,10,7)])
  literal.1441: bits[1] = literal(value=1, id=1441, pos=[(1,10,7)])
  literal.1381: bits[1] = literal(value=1, id=1381, pos=[(1,10,7)])
  literal.1431: bits[1] = literal(value=0, id=1431, pos=[(1,10,7)])
  literal.1437: bits[1] = literal(value=1, id=1437, pos=[(1,10,7)])
  literal.1438: bits[1] = literal(value=1, id=1438, pos=[(1,10,7)])
  array_index.1253: bits[32] = array_index(a, indices=[literal.1249, literal.1428], id=1253, pos=[(1,21,9)])
  array_index.1256: bits[32] = array_index(b, indices=[literal.1429, literal.1430], id=1256, pos=[(1,21,9)])
  array_index.1279: bits[32] = array_index(a, indices=[literal.1432, literal.1435], id=1279, pos=[(1,21,9)])
  array_index.1282: bits[32] = array_index(b, indices=[literal.1436, literal.1433], id=1282, pos=[(1,21,9)])
  array_index.1302: bits[32] = array_index(b, indices=[literal.1434, literal.1439], id=1302, pos=[(1,21,9)])
  array_index.1322: bits[32] = array_index(b, indices=[literal.1440, literal.1441], id=1322, pos=[(1,21,9)])
  array_index.1259: bits[32] = array_index(a, indices=[literal.1381, literal.1431], id=1259, pos=[(1,21,9)])
  array_index.1285: bits[32] = array_index(a, indices=[literal.1437, literal.1438], id=1285, pos=[(1,21,9)])
  smul.211: bits[32] = smul(array_index.1253, array_index.1256, id=211, pos=[(1,21,9)])
  smul.253: bits[32] = smul(array_index.1279, array_index.1282, id=253, pos=[(1,21,9)])
  smul.320: bits[32] = smul(array_index.1253, array_index.1302, id=320, pos=[(1,21,9)])
  smul.363: bits[32] = smul(array_index.1279, array_index.1322, id=363, pos=[(1,21,9)])
  smul.457: bits[32] = smul(array_index.1259, array_index.1256, id=457, pos=[(1,21,9)])
  smul.503: bits[32] = smul(array_index.1285, array_index.1282, id=503, pos=[(1,21,9)])
  smul.570: bits[32] = smul(array_index.1259, array_index.1302, id=570, pos=[(1,21,9)])
  smul.613: bits[32] = smul(array_index.1285, array_index.1322, id=613, pos=[(1,21,9)])
  add.257: bits[32] = add(smul.211, smul.253, id=257, pos=[(1,21,9)])
  add.367: bits[32] = add(smul.320, smul.363, id=367, pos=[(1,21,9)])
  add.507: bits[32] = add(smul.457, smul.503, id=507, pos=[(1,21,9)])
  add.617: bits[32] = add(smul.570, smul.613, id=617, pos=[(1,21,9)])
  array.1218: bits[32][2] = array(add.257, add.367, id=1218, pos=[(1,21,9)])
  array.1215: bits[32][2] = array(add.507, add.617, id=1215, pos=[(1,21,9)])
  array.1197: bits[32][2][2] = array(array.1218, array.1215, id=1197, pos=[(1,21,9)])
  ret tuple.688: (bits[32][2][2], bits[32][2][2], bits[32][2][2]) = tuple(a, b, array.1197, id=688, pos=[(1,4,1)])
}

block xls_test(clk: clock, a: bits[32][2][2], b: bits[32][2][2], result: bits[32][2][2], out: (bits[32][2][2], bits[32][2][2], bits[32][2][2])) {
  reg p0_a(bits[32][2][2])
  reg p0_b(bits[32][2][2])
  reg p1_a(bits[32][2][2])
  reg p1_b(bits[32][2][2])
  reg p2_a(bits[32][2][2])
  reg p2_b(bits[32][2][2])
  reg p3_a(bits[32][2][2])
  reg p3_b(bits[32][2][2])
  reg p3_array_index_1473(bits[32])
  reg p3_array_index_1474(bits[32])
  reg p3_array_index_1475(bits[32])
  reg p3_array_index_1476(bits[32])
  reg p3_array_index_1477(bits[32])
  reg p3_array_index_1478(bits[32])
  reg p3_array_index_1479(bits[32])
  reg p3_array_index_1480(bits[32])
  reg p4_a(bits[32][2][2])
  reg p4_b(bits[32][2][2])
  reg p4_smul_1501(bits[32])
  reg p4_smul_1502(bits[32])
  reg p4_smul_1503(bits[32])
  reg p4_smul_1504(bits[32])
  reg p4_smul_1505(bits[32])
  reg p4_smul_1506(bits[32])
  reg p4_smul_1507(bits[32])
  reg p4_smul_1508(bits[32])
  reg p5_tuple_1536((bits[32][2][2], bits[32][2][2], bits[32][2][2]))
  a: bits[32][2][2] = input_port(name=a, id=1442)
  b: bits[32][2][2] = input_port(name=b, id=1443)
  result: bits[32][2][2] = input_port(name=result, id=1444)
  register_write.1445: () = register_write(a, register=p0_a, id=1445)
  register_write.1447: () = register_write(b, register=p0_b, id=1447)
  p0_a: bits[32][2][2] = register_read(register=p0_a, id=1446)
  p0_b: bits[32][2][2] = register_read(register=p0_b, id=1448)
  register_write.1449: () = register_write(p0_a, register=p1_a, id=1449)
  register_write.1451: () = register_write(p0_b, register=p1_b, id=1451)
  p1_a: bits[32][2][2] = register_read(register=p1_a, id=1450)
  p1_b: bits[32][2][2] = register_read(register=p1_b, id=1452)
  register_write.1453: () = register_write(p1_a, register=p2_a, id=1453)
  register_write.1455: () = register_write(p1_b, register=p2_b, id=1455)
  p2_a: bits[32][2][2] = register_read(register=p2_a, id=1454)
  p2_b: bits[32][2][2] = register_read(register=p2_b, id=1456)
  literal.1457: bits[1] = literal(value=0, id=1457, pos=[(1,10,7)])
  literal.1458: bits[1] = literal(value=0, id=1458, pos=[(1,10,7)])
  literal.1459: bits[1] = literal(value=0, id=1459, pos=[(1,10,7)])
  literal.1460: bits[1] = literal(value=0, id=1460, pos=[(1,10,7)])
  literal.1461: bits[1] = literal(value=0, id=1461, pos=[(1,10,7)])
  literal.1462: bits[1] = literal(value=1, id=1462, pos=[(1,10,7)])
  literal.1463: bits[1] = literal(value=1, id=1463, pos=[(1,10,7)])
  literal.1464: bits[1] = literal(value=0, id=1464, pos=[(1,10,7)])
  literal.1465: bits[1] = literal(value=0, id=1465, pos=[(1,10,7)])
  literal.1466: bits[1] = literal(value=1, id=1466, pos=[(1,10,7)])
  literal.1467: bits[1] = literal(value=1, id=1467, pos=[(1,10,7)])
  literal.1468: bits[1] = literal(value=1, id=1468, pos=[(1,10,7)])
  literal.1469: bits[1] = literal(value=1, id=1469, pos=[(1,10,7)])
  literal.1470: bits[1] = literal(value=0, id=1470, pos=[(1,10,7)])
  literal.1471: bits[1] = literal(value=1, id=1471, pos=[(1,10,7)])
  literal.1472: bits[1] = literal(value=1, id=1472, pos=[(1,10,7)])
  array_index.1473: bits[32] = array_index(p2_a, indices=[literal.1457, literal.1458], id=1473, pos=[(1,21,9)])
  array_index.1474: bits[32] = array_index(p2_b, indices=[literal.1459, literal.1460], id=1474, pos=[(1,21,9)])
  array_index.1475: bits[32] = array_index(p2_a, indices=[literal.1461, literal.1462], id=1475, pos=[(1,21,9)])
  array_index.1476: bits[32] = array_index(p2_b, indices=[literal.1463, literal.1464], id=1476, pos=[(1,21,9)])
  array_index.1477: bits[32] = array_index(p2_b, indices=[literal.1465, literal.1466], id=1477, pos=[(1,21,9)])
  array_index.1478: bits[32] = array_index(p2_b, indices=[literal.1467, literal.1468], id=1478, pos=[(1,21,9)])
  array_index.1479: bits[32] = array_index(p2_a, indices=[literal.1469, literal.1470], id=1479, pos=[(1,21,9)])
  array_index.1480: bits[32] = array_index(p2_a, indices=[literal.1471, literal.1472], id=1480, pos=[(1,21,9)])
  register_write.1481: () = register_write(p2_a, register=p3_a, id=1481)
  register_write.1483: () = register_write(p2_b, register=p3_b, id=1483)
  register_write.1485: () = register_write(array_index.1473, register=p3_array_index_1473, id=1485, pos=[(1,21,9)])
  register_write.1487: () = register_write(array_index.1474, register=p3_array_index_1474, id=1487, pos=[(1,21,9)])
  register_write.1489: () = register_write(array_index.1475, register=p3_array_index_1475, id=1489, pos=[(1,21,9)])
  register_write.1491: () = register_write(array_index.1476, register=p3_array_index_1476, id=1491, pos=[(1,21,9)])
  register_write.1493: () = register_write(array_index.1477, register=p3_array_index_1477, id=1493, pos=[(1,21,9)])
  register_write.1495: () = register_write(array_index.1478, register=p3_array_index_1478, id=1495, pos=[(1,21,9)])
  register_write.1497: () = register_write(array_index.1479, register=p3_array_index_1479, id=1497, pos=[(1,21,9)])
  register_write.1499: () = register_write(array_index.1480, register=p3_array_index_1480, id=1499, pos=[(1,21,9)])
  p3_a: bits[32][2][2] = register_read(register=p3_a, id=1482)
  p3_b: bits[32][2][2] = register_read(register=p3_b, id=1484)
  p3_array_index_1473: bits[32] = register_read(register=p3_array_index_1473, id=1486, pos=[(1,21,9)])
  p3_array_index_1474: bits[32] = register_read(register=p3_array_index_1474, id=1488, pos=[(1,21,9)])
  p3_array_index_1475: bits[32] = register_read(register=p3_array_index_1475, id=1490, pos=[(1,21,9)])
  p3_array_index_1476: bits[32] = register_read(register=p3_array_index_1476, id=1492, pos=[(1,21,9)])
  p3_array_index_1477: bits[32] = register_read(register=p3_array_index_1477, id=1494, pos=[(1,21,9)])
  p3_array_index_1478: bits[32] = register_read(register=p3_array_index_1478, id=1496, pos=[(1,21,9)])
  p3_array_index_1479: bits[32] = register_read(register=p3_array_index_1479, id=1498, pos=[(1,21,9)])
  p3_array_index_1480: bits[32] = register_read(register=p3_array_index_1480, id=1500, pos=[(1,21,9)])
  smul.1501: bits[32] = smul(p3_array_index_1473, p3_array_index_1474, id=1501, pos=[(1,21,9)])
  smul.1502: bits[32] = smul(p3_array_index_1475, p3_array_index_1476, id=1502, pos=[(1,21,9)])
  smul.1503: bits[32] = smul(p3_array_index_1473, p3_array_index_1477, id=1503, pos=[(1,21,9)])
  smul.1504: bits[32] = smul(p3_array_index_1475, p3_array_index_1478, id=1504, pos=[(1,21,9)])
  smul.1505: bits[32] = smul(p3_array_index_1479, p3_array_index_1474, id=1505, pos=[(1,21,9)])
  smul.1506: bits[32] = smul(p3_array_index_1480, p3_array_index_1476, id=1506, pos=[(1,21,9)])
  smul.1507: bits[32] = smul(p3_array_index_1479, p3_array_index_1477, id=1507, pos=[(1,21,9)])
  smul.1508: bits[32] = smul(p3_array_index_1480, p3_array_index_1478, id=1508, pos=[(1,21,9)])
  register_write.1509: () = register_write(p3_a, register=p4_a, id=1509)
  register_write.1511: () = register_write(p3_b, register=p4_b, id=1511)
  register_write.1513: () = register_write(smul.1501, register=p4_smul_1501, id=1513, pos=[(1,21,9)])
  register_write.1515: () = register_write(smul.1502, register=p4_smul_1502, id=1515, pos=[(1,21,9)])
  register_write.1517: () = register_write(smul.1503, register=p4_smul_1503, id=1517, pos=[(1,21,9)])
  register_write.1519: () = register_write(smul.1504, register=p4_smul_1504, id=1519, pos=[(1,21,9)])
  register_write.1521: () = register_write(smul.1505, register=p4_smul_1505, id=1521, pos=[(1,21,9)])
  register_write.1523: () = register_write(smul.1506, register=p4_smul_1506, id=1523, pos=[(1,21,9)])
  register_write.1525: () = register_write(smul.1507, register=p4_smul_1507, id=1525, pos=[(1,21,9)])
  register_write.1527: () = register_write(smul.1508, register=p4_smul_1508, id=1527, pos=[(1,21,9)])
  p4_a: bits[32][2][2] = register_read(register=p4_a, id=1510)
  p4_b: bits[32][2][2] = register_read(register=p4_b, id=1512)
  p4_smul_1501: bits[32] = register_read(register=p4_smul_1501, id=1514, pos=[(1,21,9)])
  p4_smul_1502: bits[32] = register_read(register=p4_smul_1502, id=1516, pos=[(1,21,9)])
  p4_smul_1503: bits[32] = register_read(register=p4_smul_1503, id=1518, pos=[(1,21,9)])
  p4_smul_1504: bits[32] = register_read(register=p4_smul_1504, id=1520, pos=[(1,21,9)])
  p4_smul_1505: bits[32] = register_read(register=p4_smul_1505, id=1522, pos=[(1,21,9)])
  p4_smul_1506: bits[32] = register_read(register=p4_smul_1506, id=1524, pos=[(1,21,9)])
  p4_smul_1507: bits[32] = register_read(register=p4_smul_1507, id=1526, pos=[(1,21,9)])
  p4_smul_1508: bits[32] = register_read(register=p4_smul_1508, id=1528, pos=[(1,21,9)])
  add.1529: bits[32] = add(p4_smul_1501, p4_smul_1502, id=1529, pos=[(1,21,9)])
  add.1530: bits[32] = add(p4_smul_1503, p4_smul_1504, id=1530, pos=[(1,21,9)])
  add.1531: bits[32] = add(p4_smul_1505, p4_smul_1506, id=1531, pos=[(1,21,9)])
  add.1532: bits[32] = add(p4_smul_1507, p4_smul_1508, id=1532, pos=[(1,21,9)])
  array.1533: bits[32][2] = array(add.1529, add.1530, id=1533, pos=[(1,21,9)])
  array.1534: bits[32][2] = array(add.1531, add.1532, id=1534, pos=[(1,21,9)])
  array.1535: bits[32][2][2] = array(array.1533, array.1534, id=1535, pos=[(1,21,9)])
  tuple.1536: (bits[32][2][2], bits[32][2][2], bits[32][2][2]) = tuple(p4_a, p4_b, array.1535, id=1536, pos=[(1,4,1)])
  register_write.1537: () = register_write(tuple.1536, register=p5_tuple_1536, id=1537, pos=[(1,4,1)])
  p5_tuple_1536: (bits[32][2][2], bits[32][2][2], bits[32][2][2]) = register_read(register=p5_tuple_1536, id=1538, pos=[(1,4,1)])
  out: () = output_port(p5_tuple_1536, name=out, id=1539)
}
