package crc32

file_number 0 "xls/examples/crc32.x"

top fn __crc32__main(message: bits[8]) -> bits[32] {
  not.225: bits[8] = not(message, id=225, pos=[(0,21,16)])
  literal.277: bits[31] = literal(value=0, id=277, pos=[(0,24,21)])
  bit_slice.231: bits[1] = bit_slice(not.225, start=0, width=1, id=231, pos=[(0,24,21)])
  concat.236: bits[32] = concat(literal.277, bit_slice.231, id=236, pos=[(0,24,21)])
  literal.238: bits[25] = literal(value=16777215, id=238, pos=[(0,25,9)])
  bit_slice.233: bits[7] = bit_slice(not.225, start=1, width=7, id=233, pos=[(0,25,9)])
  neg.139: bits[32] = neg(concat.236, id=139, pos=[(0,24,15)])
  literal.21: bits[32] = literal(value=3988292384, id=21, pos=[(0,30,30)])
  concat.239: bits[32] = concat(literal.238, bit_slice.233, id=239, pos=[(0,25,9)])
  and.215: bits[32] = and(neg.139, literal.21, id=215, pos=[(0,25,33)])
  xor.142: bits[32] = xor(concat.239, and.215, id=142, pos=[(0,25,19)])
  literal.134: bits[31] = literal(value=0, id=134, pos=[(0,24,21)])
  bit_slice.144: bits[1] = bit_slice(xor.142, start=0, width=1, id=144, pos=[(0,24,21)])
  concat.145: bits[32] = concat(literal.134, bit_slice.144, id=145, pos=[(0,24,21)])
  literal.137: bits[1] = literal(value=0, id=137, pos=[(0,25,9)])
  bit_slice.147: bits[31] = bit_slice(xor.142, start=1, width=31, id=147, pos=[(0,25,9)])
  neg.148: bits[32] = neg(concat.145, id=148, pos=[(0,24,15)])
  literal.264: bits[32] = literal(value=3988292384, id=264, pos=[(0,30,30)])
  concat.149: bits[32] = concat(literal.137, bit_slice.147, id=149, pos=[(0,25,9)])
  and.216: bits[32] = and(neg.148, literal.264, id=216, pos=[(0,25,33)])
  xor.151: bits[32] = xor(concat.149, and.216, id=151, pos=[(0,25,19)])
  literal.271: bits[31] = literal(value=0, id=271, pos=[(0,24,21)])
  bit_slice.153: bits[1] = bit_slice(xor.151, start=0, width=1, id=153, pos=[(0,24,21)])
  concat.154: bits[32] = concat(literal.271, bit_slice.153, id=154, pos=[(0,24,21)])
  literal.278: bits[1] = literal(value=0, id=278, pos=[(0,25,9)])
  bit_slice.156: bits[31] = bit_slice(xor.151, start=1, width=31, id=156, pos=[(0,25,9)])
  neg.157: bits[32] = neg(concat.154, id=157, pos=[(0,24,15)])
  literal.265: bits[32] = literal(value=3988292384, id=265, pos=[(0,30,30)])
  concat.158: bits[32] = concat(literal.278, bit_slice.156, id=158, pos=[(0,25,9)])
  and.217: bits[32] = and(neg.157, literal.265, id=217, pos=[(0,25,33)])
  xor.160: bits[32] = xor(concat.158, and.217, id=160, pos=[(0,25,19)])
  literal.272: bits[31] = literal(value=0, id=272, pos=[(0,24,21)])
  bit_slice.162: bits[1] = bit_slice(xor.160, start=0, width=1, id=162, pos=[(0,24,21)])
  concat.163: bits[32] = concat(literal.272, bit_slice.162, id=163, pos=[(0,24,21)])
  literal.279: bits[1] = literal(value=0, id=279, pos=[(0,25,9)])
  bit_slice.165: bits[31] = bit_slice(xor.160, start=1, width=31, id=165, pos=[(0,25,9)])
  neg.166: bits[32] = neg(concat.163, id=166, pos=[(0,24,15)])
  literal.266: bits[32] = literal(value=3988292384, id=266, pos=[(0,30,30)])
  concat.167: bits[32] = concat(literal.279, bit_slice.165, id=167, pos=[(0,25,9)])
  and.218: bits[32] = and(neg.166, literal.266, id=218, pos=[(0,25,33)])
  xor.169: bits[32] = xor(concat.167, and.218, id=169, pos=[(0,25,19)])
  literal.273: bits[31] = literal(value=0, id=273, pos=[(0,24,21)])
  bit_slice.171: bits[1] = bit_slice(xor.169, start=0, width=1, id=171, pos=[(0,24,21)])
  concat.172: bits[32] = concat(literal.273, bit_slice.171, id=172, pos=[(0,24,21)])
  literal.280: bits[1] = literal(value=0, id=280, pos=[(0,25,9)])
  bit_slice.174: bits[31] = bit_slice(xor.169, start=1, width=31, id=174, pos=[(0,25,9)])
  neg.175: bits[32] = neg(concat.172, id=175, pos=[(0,24,15)])
  literal.267: bits[32] = literal(value=3988292384, id=267, pos=[(0,30,30)])
  concat.176: bits[32] = concat(literal.280, bit_slice.174, id=176, pos=[(0,25,9)])
  and.219: bits[32] = and(neg.175, literal.267, id=219, pos=[(0,25,33)])
  xor.178: bits[32] = xor(concat.176, and.219, id=178, pos=[(0,25,19)])
  literal.274: bits[31] = literal(value=0, id=274, pos=[(0,24,21)])
  bit_slice.180: bits[1] = bit_slice(xor.178, start=0, width=1, id=180, pos=[(0,24,21)])
  concat.181: bits[32] = concat(literal.274, bit_slice.180, id=181, pos=[(0,24,21)])
  literal.281: bits[1] = literal(value=0, id=281, pos=[(0,25,9)])
  bit_slice.183: bits[31] = bit_slice(xor.178, start=1, width=31, id=183, pos=[(0,25,9)])
  neg.184: bits[32] = neg(concat.181, id=184, pos=[(0,24,15)])
  literal.268: bits[32] = literal(value=3988292384, id=268, pos=[(0,30,30)])
  concat.185: bits[32] = concat(literal.281, bit_slice.183, id=185, pos=[(0,25,9)])
  and.220: bits[32] = and(neg.184, literal.268, id=220, pos=[(0,25,33)])
  xor.187: bits[32] = xor(concat.185, and.220, id=187, pos=[(0,25,19)])
  literal.275: bits[31] = literal(value=0, id=275, pos=[(0,24,21)])
  bit_slice.189: bits[1] = bit_slice(xor.187, start=0, width=1, id=189, pos=[(0,24,21)])
  concat.190: bits[32] = concat(literal.275, bit_slice.189, id=190, pos=[(0,24,21)])
  literal.282: bits[1] = literal(value=0, id=282, pos=[(0,25,9)])
  bit_slice.192: bits[31] = bit_slice(xor.187, start=1, width=31, id=192, pos=[(0,25,9)])
  neg.193: bits[32] = neg(concat.190, id=193, pos=[(0,24,15)])
  literal.269: bits[32] = literal(value=3988292384, id=269, pos=[(0,30,30)])
  concat.194: bits[32] = concat(literal.282, bit_slice.192, id=194, pos=[(0,25,9)])
  and.221: bits[32] = and(neg.193, literal.269, id=221, pos=[(0,25,33)])
  xor.196: bits[32] = xor(concat.194, and.221, id=196, pos=[(0,25,19)])
  literal.276: bits[31] = literal(value=0, id=276, pos=[(0,24,21)])
  bit_slice.198: bits[1] = bit_slice(xor.196, start=0, width=1, id=198, pos=[(0,24,21)])
  concat.199: bits[32] = concat(literal.276, bit_slice.198, id=199, pos=[(0,24,21)])
  literal.283: bits[1] = literal(value=0, id=283, pos=[(0,25,9)])
  bit_slice.201: bits[31] = bit_slice(xor.196, start=1, width=31, id=201, pos=[(0,25,9)])
  neg.202: bits[32] = neg(concat.199, id=202, pos=[(0,24,15)])
  literal.270: bits[32] = literal(value=3988292384, id=270, pos=[(0,30,30)])
  concat.203: bits[32] = concat(literal.283, bit_slice.201, id=203, pos=[(0,25,9)])
  and.222: bits[32] = and(neg.202, literal.270, id=222, pos=[(0,25,33)])
  xor.213: bits[32] = xor(concat.203, and.222, id=213, pos=[(0,25,19)])
  ret not.37: bits[32] = not(xor.213, id=37, pos=[(0,30,51)])
}
