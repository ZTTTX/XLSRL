package crc32

file_number 0 "xls/examples/crc32.x"

top fn __crc32__main(message: bits[8]) -> bits[32] {
  not.376: bits[8] = not(message, id=376)
  literal.464: bits[31] = literal(value=0, id=464, pos=[(0,24,21)])
  bit_slice.231: bits[1] = bit_slice(not.376, start=0, width=1, id=231, pos=[(0,24,21)])
  concat.236: bits[32] = concat(literal.464, bit_slice.231, id=236, pos=[(0,24,21)])
  literal.238: bits[25] = literal(value=16777215, id=238, pos=[(0,25,9)])
  bit_slice.233: bits[7] = bit_slice(not.376, start=1, width=7, id=233, pos=[(0,25,9)])
  neg.374: bits[32] = neg(concat.236, id=374, pos=[(0,24,21)])
  literal.21: bits[32] = literal(value=3988292384, id=21, pos=[(0,30,30)])
  concat.239: bits[32] = concat(literal.238, bit_slice.233, id=239, pos=[(0,25,9)])
  and.215: bits[32] = and(neg.374, literal.21, id=215, pos=[(0,25,33)])
  xor.142: bits[32] = xor(concat.239, and.215, id=142, pos=[(0,25,19)])
  literal.277: bits[31] = literal(value=0, id=277, pos=[(0,24,21)])
  bit_slice.144: bits[1] = bit_slice(xor.142, start=0, width=1, id=144, pos=[(0,24,21)])
  concat.145: bits[32] = concat(literal.277, bit_slice.144, id=145, pos=[(0,24,21)])
  literal.137: bits[1] = literal(value=0, id=137, pos=[(0,25,9)])
  bit_slice.147: bits[31] = bit_slice(xor.142, start=1, width=31, id=147, pos=[(0,25,9)])
  neg.372: bits[32] = neg(concat.145, id=372, pos=[(0,24,21)])
  literal.465: bits[32] = literal(value=3988292384, id=465, pos=[(0,30,30)])
  concat.149: bits[32] = concat(literal.137, bit_slice.147, id=149, pos=[(0,25,9)])
  and.216: bits[32] = and(neg.372, literal.465, id=216, pos=[(0,25,33)])
  xor.151: bits[32] = xor(concat.149, and.216, id=151, pos=[(0,25,19)])
  literal.458: bits[31] = literal(value=0, id=458, pos=[(0,24,21)])
  bit_slice.153: bits[1] = bit_slice(xor.151, start=0, width=1, id=153, pos=[(0,24,21)])
  concat.154: bits[32] = concat(literal.458, bit_slice.153, id=154, pos=[(0,24,21)])
  literal.472: bits[1] = literal(value=0, id=472, pos=[(0,25,9)])
  bit_slice.156: bits[31] = bit_slice(xor.151, start=1, width=31, id=156, pos=[(0,25,9)])
  neg.370: bits[32] = neg(concat.154, id=370, pos=[(0,24,21)])
  literal.466: bits[32] = literal(value=3988292384, id=466, pos=[(0,30,30)])
  concat.158: bits[32] = concat(literal.472, bit_slice.156, id=158, pos=[(0,25,9)])
  and.217: bits[32] = and(neg.370, literal.466, id=217, pos=[(0,25,33)])
  xor.160: bits[32] = xor(concat.158, and.217, id=160, pos=[(0,25,19)])
  literal.459: bits[31] = literal(value=0, id=459, pos=[(0,24,21)])
  bit_slice.162: bits[1] = bit_slice(xor.160, start=0, width=1, id=162, pos=[(0,24,21)])
  concat.163: bits[32] = concat(literal.459, bit_slice.162, id=163, pos=[(0,24,21)])
  literal.473: bits[1] = literal(value=0, id=473, pos=[(0,25,9)])
  bit_slice.165: bits[31] = bit_slice(xor.160, start=1, width=31, id=165, pos=[(0,25,9)])
  neg.368: bits[32] = neg(concat.163, id=368, pos=[(0,24,21)])
  literal.467: bits[32] = literal(value=3988292384, id=467, pos=[(0,30,30)])
  concat.167: bits[32] = concat(literal.473, bit_slice.165, id=167, pos=[(0,25,9)])
  and.218: bits[32] = and(neg.368, literal.467, id=218, pos=[(0,25,33)])
  xor.169: bits[32] = xor(concat.167, and.218, id=169, pos=[(0,25,19)])
  literal.460: bits[31] = literal(value=0, id=460, pos=[(0,24,21)])
  bit_slice.171: bits[1] = bit_slice(xor.169, start=0, width=1, id=171, pos=[(0,24,21)])
  concat.172: bits[32] = concat(literal.460, bit_slice.171, id=172, pos=[(0,24,21)])
  literal.474: bits[1] = literal(value=0, id=474, pos=[(0,25,9)])
  bit_slice.174: bits[31] = bit_slice(xor.169, start=1, width=31, id=174, pos=[(0,25,9)])
  neg.366: bits[32] = neg(concat.172, id=366, pos=[(0,24,21)])
  literal.468: bits[32] = literal(value=3988292384, id=468, pos=[(0,30,30)])
  concat.176: bits[32] = concat(literal.474, bit_slice.174, id=176, pos=[(0,25,9)])
  and.219: bits[32] = and(neg.366, literal.468, id=219, pos=[(0,25,33)])
  xor.178: bits[32] = xor(concat.176, and.219, id=178, pos=[(0,25,19)])
  literal.461: bits[31] = literal(value=0, id=461, pos=[(0,24,21)])
  bit_slice.180: bits[1] = bit_slice(xor.178, start=0, width=1, id=180, pos=[(0,24,21)])
  concat.181: bits[32] = concat(literal.461, bit_slice.180, id=181, pos=[(0,24,21)])
  literal.475: bits[1] = literal(value=0, id=475, pos=[(0,25,9)])
  bit_slice.183: bits[31] = bit_slice(xor.178, start=1, width=31, id=183, pos=[(0,25,9)])
  neg.364: bits[32] = neg(concat.181, id=364, pos=[(0,24,21)])
  literal.469: bits[32] = literal(value=3988292384, id=469, pos=[(0,30,30)])
  concat.185: bits[32] = concat(literal.475, bit_slice.183, id=185, pos=[(0,25,9)])
  and.220: bits[32] = and(neg.364, literal.469, id=220, pos=[(0,25,33)])
  xor.187: bits[32] = xor(concat.185, and.220, id=187, pos=[(0,25,19)])
  literal.462: bits[31] = literal(value=0, id=462, pos=[(0,24,21)])
  bit_slice.189: bits[1] = bit_slice(xor.187, start=0, width=1, id=189, pos=[(0,24,21)])
  concat.190: bits[32] = concat(literal.462, bit_slice.189, id=190, pos=[(0,24,21)])
  literal.476: bits[1] = literal(value=0, id=476, pos=[(0,25,9)])
  bit_slice.192: bits[31] = bit_slice(xor.187, start=1, width=31, id=192, pos=[(0,25,9)])
  neg.362: bits[32] = neg(concat.190, id=362, pos=[(0,24,21)])
  literal.470: bits[32] = literal(value=3988292384, id=470, pos=[(0,30,30)])
  concat.194: bits[32] = concat(literal.476, bit_slice.192, id=194, pos=[(0,25,9)])
  and.221: bits[32] = and(neg.362, literal.470, id=221, pos=[(0,25,33)])
  xor.196: bits[32] = xor(concat.194, and.221, id=196, pos=[(0,25,19)])
  literal.463: bits[31] = literal(value=0, id=463, pos=[(0,24,21)])
  bit_slice.198: bits[1] = bit_slice(xor.196, start=0, width=1, id=198, pos=[(0,24,21)])
  concat.199: bits[32] = concat(literal.463, bit_slice.198, id=199, pos=[(0,24,21)])
  literal.477: bits[1] = literal(value=0, id=477, pos=[(0,25,9)])
  bit_slice.201: bits[31] = bit_slice(xor.196, start=1, width=31, id=201, pos=[(0,25,9)])
  neg.360: bits[32] = neg(concat.199, id=360, pos=[(0,24,21)])
  literal.471: bits[32] = literal(value=3988292384, id=471, pos=[(0,30,30)])
  concat.203: bits[32] = concat(literal.477, bit_slice.201, id=203, pos=[(0,25,9)])
  and.222: bits[32] = and(neg.360, literal.471, id=222, pos=[(0,25,33)])
  xor.213: bits[32] = xor(concat.203, and.222, id=213, pos=[(0,25,19)])
  ret not.358: bits[32] = not(xor.213, id=358, pos=[(0,25,19)])
}

block xls_test(clk: clock, message: bits[8], out: bits[32]) {
  reg p0_message(bits[8])
  reg p1_bit_slice_492(bits[1])
  reg p1_bit_slice_493(bits[31])
  reg p2_bit_slice_506(bits[1])
  reg p2_bit_slice_507(bits[31])
  reg p3_bit_slice_520(bits[1])
  reg p3_bit_slice_521(bits[31])
  reg p4_bit_slice_534(bits[1])
  reg p4_bit_slice_535(bits[31])
  reg p5_bit_slice_548(bits[1])
  reg p5_bit_slice_549(bits[31])
  reg p6_bit_slice_562(bits[1])
  reg p6_bit_slice_563(bits[31])
  reg p7_bit_slice_576(bits[1])
  reg p7_bit_slice_577(bits[31])
  reg p8_not_590(bits[32])
  message: bits[8] = input_port(name=message, id=478)
  register_write.479: () = register_write(message, register=p0_message, id=479)
  p0_message: bits[8] = register_read(register=p0_message, id=480)
  not.481: bits[8] = not(p0_message, id=481)
  literal.482: bits[31] = literal(value=0, id=482, pos=[(0,24,21)])
  bit_slice.483: bits[1] = bit_slice(not.481, start=0, width=1, id=483, pos=[(0,24,21)])
  concat.484: bits[32] = concat(literal.482, bit_slice.483, id=484, pos=[(0,24,21)])
  literal.485: bits[25] = literal(value=16777215, id=485, pos=[(0,25,9)])
  bit_slice.486: bits[7] = bit_slice(not.481, start=1, width=7, id=486, pos=[(0,25,9)])
  neg.487: bits[32] = neg(concat.484, id=487, pos=[(0,24,21)])
  literal.488: bits[32] = literal(value=3988292384, id=488, pos=[(0,30,30)])
  concat.489: bits[32] = concat(literal.485, bit_slice.486, id=489, pos=[(0,25,9)])
  and.490: bits[32] = and(neg.487, literal.488, id=490, pos=[(0,25,33)])
  xor.491: bits[32] = xor(concat.489, and.490, id=491, pos=[(0,25,19)])
  bit_slice.492: bits[1] = bit_slice(xor.491, start=0, width=1, id=492, pos=[(0,24,21)])
  bit_slice.493: bits[31] = bit_slice(xor.491, start=1, width=31, id=493, pos=[(0,25,9)])
  register_write.494: () = register_write(bit_slice.492, register=p1_bit_slice_492, id=494, pos=[(0,24,21)])
  register_write.496: () = register_write(bit_slice.493, register=p1_bit_slice_493, id=496, pos=[(0,25,9)])
  p1_bit_slice_492: bits[1] = register_read(register=p1_bit_slice_492, id=495, pos=[(0,24,21)])
  p1_bit_slice_493: bits[31] = register_read(register=p1_bit_slice_493, id=497, pos=[(0,25,9)])
  literal.498: bits[31] = literal(value=0, id=498, pos=[(0,24,21)])
  concat.499: bits[32] = concat(literal.498, p1_bit_slice_492, id=499, pos=[(0,24,21)])
  literal.500: bits[1] = literal(value=0, id=500, pos=[(0,25,9)])
  neg.501: bits[32] = neg(concat.499, id=501, pos=[(0,24,21)])
  literal.502: bits[32] = literal(value=3988292384, id=502, pos=[(0,30,30)])
  concat.503: bits[32] = concat(literal.500, p1_bit_slice_493, id=503, pos=[(0,25,9)])
  and.504: bits[32] = and(neg.501, literal.502, id=504, pos=[(0,25,33)])
  xor.505: bits[32] = xor(concat.503, and.504, id=505, pos=[(0,25,19)])
  bit_slice.506: bits[1] = bit_slice(xor.505, start=0, width=1, id=506, pos=[(0,24,21)])
  bit_slice.507: bits[31] = bit_slice(xor.505, start=1, width=31, id=507, pos=[(0,25,9)])
  register_write.508: () = register_write(bit_slice.506, register=p2_bit_slice_506, id=508, pos=[(0,24,21)])
  register_write.510: () = register_write(bit_slice.507, register=p2_bit_slice_507, id=510, pos=[(0,25,9)])
  p2_bit_slice_506: bits[1] = register_read(register=p2_bit_slice_506, id=509, pos=[(0,24,21)])
  p2_bit_slice_507: bits[31] = register_read(register=p2_bit_slice_507, id=511, pos=[(0,25,9)])
  literal.512: bits[31] = literal(value=0, id=512, pos=[(0,24,21)])
  concat.513: bits[32] = concat(literal.512, p2_bit_slice_506, id=513, pos=[(0,24,21)])
  literal.514: bits[1] = literal(value=0, id=514, pos=[(0,25,9)])
  neg.515: bits[32] = neg(concat.513, id=515, pos=[(0,24,21)])
  literal.516: bits[32] = literal(value=3988292384, id=516, pos=[(0,30,30)])
  concat.517: bits[32] = concat(literal.514, p2_bit_slice_507, id=517, pos=[(0,25,9)])
  and.518: bits[32] = and(neg.515, literal.516, id=518, pos=[(0,25,33)])
  xor.519: bits[32] = xor(concat.517, and.518, id=519, pos=[(0,25,19)])
  bit_slice.520: bits[1] = bit_slice(xor.519, start=0, width=1, id=520, pos=[(0,24,21)])
  bit_slice.521: bits[31] = bit_slice(xor.519, start=1, width=31, id=521, pos=[(0,25,9)])
  register_write.522: () = register_write(bit_slice.520, register=p3_bit_slice_520, id=522, pos=[(0,24,21)])
  register_write.524: () = register_write(bit_slice.521, register=p3_bit_slice_521, id=524, pos=[(0,25,9)])
  p3_bit_slice_520: bits[1] = register_read(register=p3_bit_slice_520, id=523, pos=[(0,24,21)])
  p3_bit_slice_521: bits[31] = register_read(register=p3_bit_slice_521, id=525, pos=[(0,25,9)])
  literal.526: bits[31] = literal(value=0, id=526, pos=[(0,24,21)])
  concat.527: bits[32] = concat(literal.526, p3_bit_slice_520, id=527, pos=[(0,24,21)])
  literal.528: bits[1] = literal(value=0, id=528, pos=[(0,25,9)])
  neg.529: bits[32] = neg(concat.527, id=529, pos=[(0,24,21)])
  literal.530: bits[32] = literal(value=3988292384, id=530, pos=[(0,30,30)])
  concat.531: bits[32] = concat(literal.528, p3_bit_slice_521, id=531, pos=[(0,25,9)])
  and.532: bits[32] = and(neg.529, literal.530, id=532, pos=[(0,25,33)])
  xor.533: bits[32] = xor(concat.531, and.532, id=533, pos=[(0,25,19)])
  bit_slice.534: bits[1] = bit_slice(xor.533, start=0, width=1, id=534, pos=[(0,24,21)])
  bit_slice.535: bits[31] = bit_slice(xor.533, start=1, width=31, id=535, pos=[(0,25,9)])
  register_write.536: () = register_write(bit_slice.534, register=p4_bit_slice_534, id=536, pos=[(0,24,21)])
  register_write.538: () = register_write(bit_slice.535, register=p4_bit_slice_535, id=538, pos=[(0,25,9)])
  p4_bit_slice_534: bits[1] = register_read(register=p4_bit_slice_534, id=537, pos=[(0,24,21)])
  p4_bit_slice_535: bits[31] = register_read(register=p4_bit_slice_535, id=539, pos=[(0,25,9)])
  literal.540: bits[31] = literal(value=0, id=540, pos=[(0,24,21)])
  concat.541: bits[32] = concat(literal.540, p4_bit_slice_534, id=541, pos=[(0,24,21)])
  literal.542: bits[1] = literal(value=0, id=542, pos=[(0,25,9)])
  neg.543: bits[32] = neg(concat.541, id=543, pos=[(0,24,21)])
  literal.544: bits[32] = literal(value=3988292384, id=544, pos=[(0,30,30)])
  concat.545: bits[32] = concat(literal.542, p4_bit_slice_535, id=545, pos=[(0,25,9)])
  and.546: bits[32] = and(neg.543, literal.544, id=546, pos=[(0,25,33)])
  xor.547: bits[32] = xor(concat.545, and.546, id=547, pos=[(0,25,19)])
  bit_slice.548: bits[1] = bit_slice(xor.547, start=0, width=1, id=548, pos=[(0,24,21)])
  bit_slice.549: bits[31] = bit_slice(xor.547, start=1, width=31, id=549, pos=[(0,25,9)])
  register_write.550: () = register_write(bit_slice.548, register=p5_bit_slice_548, id=550, pos=[(0,24,21)])
  register_write.552: () = register_write(bit_slice.549, register=p5_bit_slice_549, id=552, pos=[(0,25,9)])
  p5_bit_slice_548: bits[1] = register_read(register=p5_bit_slice_548, id=551, pos=[(0,24,21)])
  p5_bit_slice_549: bits[31] = register_read(register=p5_bit_slice_549, id=553, pos=[(0,25,9)])
  literal.554: bits[31] = literal(value=0, id=554, pos=[(0,24,21)])
  concat.555: bits[32] = concat(literal.554, p5_bit_slice_548, id=555, pos=[(0,24,21)])
  literal.556: bits[1] = literal(value=0, id=556, pos=[(0,25,9)])
  neg.557: bits[32] = neg(concat.555, id=557, pos=[(0,24,21)])
  literal.558: bits[32] = literal(value=3988292384, id=558, pos=[(0,30,30)])
  concat.559: bits[32] = concat(literal.556, p5_bit_slice_549, id=559, pos=[(0,25,9)])
  and.560: bits[32] = and(neg.557, literal.558, id=560, pos=[(0,25,33)])
  xor.561: bits[32] = xor(concat.559, and.560, id=561, pos=[(0,25,19)])
  bit_slice.562: bits[1] = bit_slice(xor.561, start=0, width=1, id=562, pos=[(0,24,21)])
  bit_slice.563: bits[31] = bit_slice(xor.561, start=1, width=31, id=563, pos=[(0,25,9)])
  register_write.564: () = register_write(bit_slice.562, register=p6_bit_slice_562, id=564, pos=[(0,24,21)])
  register_write.566: () = register_write(bit_slice.563, register=p6_bit_slice_563, id=566, pos=[(0,25,9)])
  p6_bit_slice_562: bits[1] = register_read(register=p6_bit_slice_562, id=565, pos=[(0,24,21)])
  p6_bit_slice_563: bits[31] = register_read(register=p6_bit_slice_563, id=567, pos=[(0,25,9)])
  literal.568: bits[31] = literal(value=0, id=568, pos=[(0,24,21)])
  concat.569: bits[32] = concat(literal.568, p6_bit_slice_562, id=569, pos=[(0,24,21)])
  literal.570: bits[1] = literal(value=0, id=570, pos=[(0,25,9)])
  neg.571: bits[32] = neg(concat.569, id=571, pos=[(0,24,21)])
  literal.572: bits[32] = literal(value=3988292384, id=572, pos=[(0,30,30)])
  concat.573: bits[32] = concat(literal.570, p6_bit_slice_563, id=573, pos=[(0,25,9)])
  and.574: bits[32] = and(neg.571, literal.572, id=574, pos=[(0,25,33)])
  xor.575: bits[32] = xor(concat.573, and.574, id=575, pos=[(0,25,19)])
  bit_slice.576: bits[1] = bit_slice(xor.575, start=0, width=1, id=576, pos=[(0,24,21)])
  bit_slice.577: bits[31] = bit_slice(xor.575, start=1, width=31, id=577, pos=[(0,25,9)])
  register_write.578: () = register_write(bit_slice.576, register=p7_bit_slice_576, id=578, pos=[(0,24,21)])
  register_write.580: () = register_write(bit_slice.577, register=p7_bit_slice_577, id=580, pos=[(0,25,9)])
  p7_bit_slice_576: bits[1] = register_read(register=p7_bit_slice_576, id=579, pos=[(0,24,21)])
  p7_bit_slice_577: bits[31] = register_read(register=p7_bit_slice_577, id=581, pos=[(0,25,9)])
  literal.582: bits[31] = literal(value=0, id=582, pos=[(0,24,21)])
  concat.583: bits[32] = concat(literal.582, p7_bit_slice_576, id=583, pos=[(0,24,21)])
  literal.584: bits[1] = literal(value=0, id=584, pos=[(0,25,9)])
  neg.585: bits[32] = neg(concat.583, id=585, pos=[(0,24,21)])
  literal.586: bits[32] = literal(value=3988292384, id=586, pos=[(0,30,30)])
  concat.587: bits[32] = concat(literal.584, p7_bit_slice_577, id=587, pos=[(0,25,9)])
  and.588: bits[32] = and(neg.585, literal.586, id=588, pos=[(0,25,33)])
  xor.589: bits[32] = xor(concat.587, and.588, id=589, pos=[(0,25,19)])
  not.590: bits[32] = not(xor.589, id=590, pos=[(0,25,19)])
  register_write.591: () = register_write(not.590, register=p8_not_590, id=591, pos=[(0,25,19)])
  p8_not_590: bits[32] = register_read(register=p8_not_590, id=592, pos=[(0,25,19)])
  out: () = output_port(p8_not_590, name=out, id=593)
}
