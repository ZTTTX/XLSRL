package riscv_simple

file_number 0 "xls/examples/riscv_simple.x"

top fn __riscv_simple__run_instruction(pc: bits[32], ins: bits[32], regs: bits[32][32], dmem: bits[8][16]) -> (bits[32], bits[32][32], bits[8][16]) {
  rs1__5: bits[5] = bit_slice(ins, start=15, width=5, id=1487, pos=[(0,173,21)])
  literal.1545: bits[20] = literal(value=0, id=1545, pos=[(0,530,35)])
  imm_11_0: bits[12] = bit_slice(ins, start=20, width=12, id=1486, pos=[(0,172,21)])
  funct3__5: bits[3] = bit_slice(ins, start=12, width=3, id=1488, pos=[(0,174,21)])
  ANDI: bits[3] = literal(value=7, id=1522, pos=[(0,91,16)])
  ORI: bits[3] = literal(value=6, id=1523, pos=[(0,90,16)])
  SRLI: bits[3] = literal(value=5, id=1524, pos=[(0,88,16)])
  XORI: bits[3] = literal(value=4, id=1525, pos=[(0,87,16)])
  SLLI: bits[3] = literal(value=1, id=1526, pos=[(0,86,16)])
  ADDI: bits[3] = literal(value=0, id=1527, pos=[(0,85,16)])
  array_index.1562: bits[32] = array_index(regs, indices=[rs1__5], id=1562, pos=[(0,401,27)])
  concat.1563: bits[32] = concat(literal.1545, imm_11_0, id=1563, pos=[(0,530,35)])
  eq.1537: bits[1] = eq(funct3__5, ANDI, id=1537, pos=[(0,530,35)])
  eq.1538: bits[1] = eq(funct3__5, ORI, id=1538, pos=[(0,530,35)])
  eq.1539: bits[1] = eq(funct3__5, SRLI, id=1539, pos=[(0,530,35)])
  eq.1540: bits[1] = eq(funct3__5, XORI, id=1540, pos=[(0,530,35)])
  eq.1541: bits[1] = eq(funct3__5, SLLI, id=1541, pos=[(0,530,35)])
  eq.1542: bits[1] = eq(funct3__5, ADDI, id=1542, pos=[(0,530,35)])
  opcode__3: bits[7] = bit_slice(ins, start=0, width=7, id=1490, pos=[(0,176,21)])
  I_LD__1: bits[7] = literal(value=3, id=1500, pos=[(0,49,20)])
  LW: bits[3] = literal(value=2, id=1528, pos=[(0,80,16)])
  addr: bits[32] = add(array_index.1562, concat.1563, id=1588, pos=[(0,401,33)])
  I_ARITH__1: bits[7] = literal(value=19, id=1501, pos=[(0,50,20)])
  I_JALR__1: bits[7] = literal(value=103, id=1499, pos=[(0,51,20)])
  concat.1557: bits[7] = concat(eq.1537, eq.1538, eq.1539, eq.1539, eq.1540, eq.1541, eq.1542, id=1557, pos=[(0,530,35)])
  eq.1506: bits[1] = eq(opcode__3, I_LD__1, id=1506, pos=[(0,530,35)])
  eq.1543: bits[1] = eq(funct3__5, LW, id=1543, pos=[(0,530,35)])
  bit_slice.2224: bits[31] = bit_slice(addr, start=1, width=31, id=2224, pos=[(0,407,29)])
  literal.2252: bits[31] = literal(value=1, id=2252, pos=[(0,407,29)])
  R_CLASS: bits[7] = literal(value=51, id=1580, pos=[(0,52,20)])
  S_CLASS: bits[7] = literal(value=35, id=1581, pos=[(0,53,20)])
  eq.1507: bits[1] = eq(opcode__3, I_ARITH__1, id=1507, pos=[(0,530,35)])
  eq.1505: bits[1] = eq(opcode__3, I_JALR__1, id=1505, pos=[(0,530,35)])
  B_CLASS: bits[7] = literal(value=99, id=1648, pos=[(0,54,20)])
  U_CLASS: bits[7] = literal(value=55, id=1790, pos=[(0,55,20)])
  UJ_CLASS: bits[7] = literal(value=111, id=1791, pos=[(0,56,20)])
  one_hot.1583: bits[8] = one_hot(concat.1557, lsb_prio=true, id=1583, pos=[(0,530,35)])
  sign_ext.2349: bits[5] = sign_ext(eq.1506, new_bit_count=5, id=2349, pos=[(0,530,35)])
  concat.2219: bits[5] = concat(eq.1539, eq.1540, eq.1543, eq.1541, eq.1542, id=2219, pos=[(0,530,35)])
  add.2226: bits[31] = add(bit_slice.2224, literal.2252, id=2226, pos=[(0,407,29)])
  bit_slice.2227: bits[1] = bit_slice(addr, start=0, width=1, id=2227, pos=[(0,407,29)])
  imm_12: bits[1] = bit_slice(ins, start=31, width=1, id=1547, pos=[(0,288,21)])
  imm_11: bits[1] = bit_slice(ins, start=7, width=1, id=1548, pos=[(0,294,21)])
  imm_10_5: bits[6] = bit_slice(ins, start=25, width=6, id=1549, pos=[(0,289,21)])
  imm_4_1: bits[4] = bit_slice(ins, start=8, width=4, id=1550, pos=[(0,293,21)])
  ADDI__1: bits[3] = literal(value=0, id=2745, pos=[(0,85,16)])
  eq.1602: bits[1] = eq(opcode__3, R_CLASS, id=1602)
  eq.1603: bits[1] = eq(opcode__3, S_CLASS, id=1603)
  or.1610: bits[1] = or(eq.1507, eq.1505, eq.1506, id=1610, pos=[(0,528,6)])
  eq.1695: bits[1] = eq(opcode__3, B_CLASS, id=1695)
  eq.1810: bits[1] = eq(opcode__3, U_CLASS, id=1810)
  eq.1811: bits[1] = eq(opcode__3, UJ_CLASS, id=1811)
  funct7__1: bits[7] = bit_slice(ins, start=25, width=7, id=1492, pos=[(0,130,19)])
  SRA_FUNCT7: bits[7] = literal(value=32, id=1575, pos=[(0,69,22)])
  SRA_FUNCT7__1: bits[7] = literal(value=32, id=2748, pos=[(0,69,22)])
  sign_ext.2351: bits[7] = sign_ext(eq.1507, new_bit_count=7, id=2351, pos=[(0,530,35)])
  bit_slice.2196: bits[7] = bit_slice(one_hot.1583, start=0, width=7, id=2196, pos=[(0,530,35)])
  literal.2750: bits[32] = literal(value=1, id=2750, pos=[(0,404,56)])
  and.2194: bits[5] = and(sign_ext.2349, concat.2219, id=2194, pos=[(0,530,35)])
  concat.2228: bits[32] = concat(add.2226, bit_slice.2227, id=2228, pos=[(0,407,29)])
  literal.1609: bits[32] = literal(value=3, id=1609, pos=[(0,408,35)])
  bit_slice.2229: bits[30] = bit_slice(pc, start=2, width=30, id=2229, pos=[(0,418,41)])
  literal.2253: bits[30] = literal(value=1, id=2253, pos=[(0,418,41)])
  rs2__1: bits[5] = bit_slice(ins, start=20, width=5, id=1493, pos=[(0,131,19)])
  concat.2446: bits[12] = concat(imm_12, imm_11, imm_10_5, imm_4_1, id=2446, pos=[(0,503,18)])
  nor.1680: bits[1] = nor(eq.1507, eq.1506, id=1680, pos=[(0,530,35)])
  ne.1561: bits[1] = ne(funct3__5, ADDI__1, id=1561, pos=[(0,530,35)])
  or.1826: bits[1] = or(eq.1602, eq.1603, or.1610, eq.1695, eq.1810, eq.1811, id=1826)
  ne.1595: bits[1] = ne(funct7__1, SRA_FUNCT7, id=1595, pos=[(0,526,35)])
  eq.1596: bits[1] = eq(funct7__1, SRA_FUNCT7__1, id=1596, pos=[(0,526,35)])
  and.2197: bits[7] = and(sign_ext.2351, bit_slice.2196, id=2197, pos=[(0,530,35)])
  array_index.1642: bits[8] = array_index(dmem, indices=[addr], id=1642, pos=[(0,404,30)])
  add.1607: bits[32] = add(addr, literal.2750, id=1607, pos=[(0,404,50)])
  bit_slice.2644: bits[1] = bit_slice(and.2194, start=1, width=1, id=2644, pos=[(0,530,35)])
  bit_slice.2406: bits[1] = bit_slice(and.2194, start=4, width=1, id=2406, pos=[(0,530,35)])
  array_index.1688: bits[8] = array_index(dmem, indices=[concat.2228], id=1688, pos=[(0,407,23)])
  add.1645: bits[32] = add(addr, literal.1609, id=1645, pos=[(0,408,29)])
  array_index.1646: bits[32] = array_index(regs, indices=[addr], id=1646, pos=[(0,410,28)])
  add.2231: bits[30] = add(bit_slice.2229, literal.2253, id=2231, pos=[(0,418,41)])
  LW__1: bits[3] = literal(value=2, id=2746, pos=[(0,80,16)])
  literal.2747: bits[20] = literal(value=0, id=2747, pos=[(0,530,35)])
  rd__3: bits[5] = bit_slice(ins, start=7, width=5, id=1489, pos=[(0,175,21)])
  array_index.1577: bits[32] = array_index(regs, indices=[rs2__1], id=1577, pos=[(0,448,35)])
  bit_slice.2242: bits[31] = bit_slice(pc, start=1, width=31, id=2242, pos=[(0,503,18)])
  sign_ext.2356: bits[31] = sign_ext(concat.2446, new_bit_count=31, id=2356, pos=[(0,503,18)])
  imm_19_12: bits[8] = bit_slice(ins, start=12, width=8, id=1659, pos=[(0,325,22)])
  imm_11__1: bits[1] = bit_slice(ins, start=20, width=1, id=1660, pos=[(0,324,22)])
  imm_10_1: bits[10] = bit_slice(ins, start=21, width=10, id=1661, pos=[(0,323,22)])
  and.1724: bits[1] = and(or.1610, nor.1680, eq.1505, ne.1561, id=1724, pos=[(0,530,35)])
  not.1835: bits[1] = not(or.1826, id=1835)
  sign_ext.1620: bits[2] = sign_ext(eq.1539, new_bit_count=2, id=1620, pos=[(0,526,35)])
  concat.1621: bits[2] = concat(ne.1595, eq.1596, id=1621, pos=[(0,526,35)])
  sign_ext.1622: bits[2] = sign_ext(eq.1542, new_bit_count=2, id=1622, pos=[(0,526,35)])
  and.2191: bits[1] = and(eq.1505, eq.1542, id=2191, pos=[(0,530,35)])
  bit_slice.2656: bits[3] = bit_slice(and.2194, start=0, width=3, id=2656, pos=[(0,530,35)])
  bit_slice.2682: bits[6] = bit_slice(and.2197, start=0, width=6, id=2682, pos=[(0,530,35)])
  shll.1731: bits[32] = shll(array_index.1562, imm_11_0, id=1731, pos=[(0,389,29)])
  xor.1732: bits[32] = xor(array_index.1562, concat.1563, id=1732, pos=[(0,390,29)])
  shrl.1733: bits[32] = shrl(array_index.1562, imm_11_0, id=1733, pos=[(0,391,29)])
  shra.1734: bits[32] = shra(array_index.1562, imm_11_0, id=1734, pos=[(0,392,39)])
  or.1735: bits[32] = or(array_index.1562, concat.1563, id=1735, pos=[(0,393,29)])
  sign_ext.1738: bits[32] = sign_ext(array_index.1642, new_bit_count=32, id=1738, pos=[(0,403,25)])
  bit_slice.2627: bits[1] = bit_slice(array_index.1642, start=7, width=1, id=2627, pos=[(0,530,35)])
  array_index.1643: bits[8] = array_index(dmem, indices=[add.1607], id=1643, pos=[(0,404,44)])
  bit_slice.2645: bits[1] = bit_slice(and.2194, start=2, width=1, id=2645, pos=[(0,530,35)])
  or.2509: bits[1] = or(bit_slice.2644, bit_slice.2406, id=2509, pos=[(0,530,35)])
  bit_slice.2643: bits[1] = bit_slice(and.2194, start=0, width=1, id=2643, pos=[(0,530,35)])
  bit_slice.2457: bits[2] = bit_slice(and.2194, start=2, width=2, id=2457, pos=[(0,530,35)])
  bit_slice.2339: bits[12] = bit_slice(array_index.1562, start=0, width=12, id=2339, pos=[(0,401,27)])
  bit_slice.2220: bits[4] = bit_slice(array_index.1642, start=0, width=4, id=2220, pos=[(0,530,35)])
  bit_slice.2205: bits[4] = bit_slice(array_index.1688, start=0, width=4, id=2205, pos=[(0,530,35)])
  array_index.1689: bits[8] = array_index(dmem, indices=[add.1645], id=1689, pos=[(0,408,23)])
  literal.2234: bits[4] = literal(value=0, id=2234, pos=[(0,530,35)])
  array_index.1691: bits[8] = array_index(dmem, indices=[array_index.1646], id=1691, pos=[(0,410,23)])
  bit_slice.2342: bits[10] = bit_slice(add.2231, start=0, width=10, id=2342, pos=[(0,530,35)])
  bit_slice.2232: bits[2] = bit_slice(pc, start=0, width=2, id=2232, pos=[(0,418,41)])
  ugt.1764: bits[1] = ugt(funct3__5, LW__1, id=1764, pos=[(0,527,35)])
  concat.1970: bits[32] = concat(literal.2747, funct7__1, rd__3, id=1970, pos=[(0,527,35)])
  literal.1589: bits[32] = literal(value=1, id=1589, pos=[(0,404,56)])
  bit_slice.2237: bits[31] = bit_slice(array_index.1577, start=1, width=31, id=2237, pos=[(0,452,47)])
  literal.2753: bits[31] = literal(value=1, id=2753, pos=[(0,407,29)])
  add.2244: bits[31] = add(bit_slice.2242, sign_ext.2356, id=2244, pos=[(0,503,18)])
  bit_slice.2245: bits[1] = bit_slice(pc, start=0, width=1, id=2245, pos=[(0,503,18)])
  concat.2447: bits[20] = concat(imm_12, imm_19_12, imm_11__1, imm_10_1, id=2447, pos=[(0,491,7)])
  or.2093: bits[1] = or(eq.1602, eq.1603, eq.1810, eq.1507, eq.1506, id=2093)
  or.2022: bits[1] = or(and.1724, not.1835, id=2022)
  and.1664: bits[2] = and(sign_ext.1620, concat.1621, id=1664, pos=[(0,526,35)])
  and.1665: bits[2] = and(sign_ext.1622, concat.1621, id=1665, pos=[(0,526,35)])
  concat.2724: bits[10] = concat(and.2191, bit_slice.2656, bit_slice.2682, id=2724, pos=[(0,530,35)])
  bit_slice.2431: bits[16] = bit_slice(addr, start=16, width=16, id=2431, pos=[(0,530,35)])
  bit_slice.2432: bits[16] = bit_slice(shll.1731, start=16, width=16, id=2432, pos=[(0,530,35)])
  bit_slice.2433: bits[16] = bit_slice(xor.1732, start=16, width=16, id=2433, pos=[(0,530,35)])
  bit_slice.2434: bits[16] = bit_slice(shrl.1733, start=16, width=16, id=2434, pos=[(0,530,35)])
  bit_slice.2435: bits[16] = bit_slice(shra.1734, start=16, width=16, id=2435, pos=[(0,530,35)])
  bit_slice.2436: bits[16] = bit_slice(or.1735, start=16, width=16, id=2436, pos=[(0,530,35)])
  bit_slice.2437: bits[16] = bit_slice(sign_ext.1738, start=16, width=16, id=2437, pos=[(0,530,35)])
  sign_ext.2548: bits[16] = sign_ext(bit_slice.2627, new_bit_count=16, id=2548, pos=[(0,530,35)])
  concat.2438: bits[16] = concat(array_index.1642, array_index.1643, id=2438, pos=[(0,530,35)])
  bit_slice.2451: bits[16] = bit_slice(add.2231, start=14, width=16, id=2451, pos=[(0,530,35)])
  concat.2725: bits[10] = concat(and.2191, bit_slice.2645, or.2509, bit_slice.2643, bit_slice.2682, id=2725, pos=[(0,530,35)])
  bit_slice.2419: bits[4] = bit_slice(addr, start=12, width=4, id=2419, pos=[(0,530,35)])
  bit_slice.2420: bits[4] = bit_slice(shll.1731, start=12, width=4, id=2420, pos=[(0,530,35)])
  bit_slice.2421: bits[4] = bit_slice(xor.1732, start=12, width=4, id=2421, pos=[(0,530,35)])
  bit_slice.2422: bits[4] = bit_slice(shrl.1733, start=12, width=4, id=2422, pos=[(0,530,35)])
  bit_slice.2423: bits[4] = bit_slice(shra.1734, start=12, width=4, id=2423, pos=[(0,530,35)])
  bit_slice.2424: bits[4] = bit_slice(or.1735, start=12, width=4, id=2424, pos=[(0,530,35)])
  bit_slice.2425: bits[4] = bit_slice(sign_ext.1738, start=12, width=4, id=2425, pos=[(0,530,35)])
  bit_slice.2443: bits[4] = bit_slice(array_index.1642, start=4, width=4, id=2443, pos=[(0,530,35)])
  bit_slice.2211: bits[4] = bit_slice(array_index.1688, start=4, width=4, id=2211, pos=[(0,530,35)])
  bit_slice.2450: bits[4] = bit_slice(add.2231, start=10, width=4, id=2450, pos=[(0,530,35)])
  concat.2482: bits[12] = concat(and.2191, bit_slice.2457, or.2509, bit_slice.2643, and.2197, id=2482, pos=[(0,530,35)])
  bit_slice.2160: bits[12] = bit_slice(addr, start=0, width=12, id=2160, pos=[(0,530,35)])
  bit_slice.2161: bits[12] = bit_slice(shll.1731, start=0, width=12, id=2161, pos=[(0,530,35)])
  bit_slice.2162: bits[12] = bit_slice(xor.1732, start=0, width=12, id=2162, pos=[(0,530,35)])
  bit_slice.2163: bits[12] = bit_slice(shrl.1733, start=0, width=12, id=2163, pos=[(0,530,35)])
  bit_slice.2164: bits[12] = bit_slice(shra.1734, start=0, width=12, id=2164, pos=[(0,530,35)])
  bit_slice.2165: bits[12] = bit_slice(or.1735, start=0, width=12, id=2165, pos=[(0,530,35)])
  and.2341: bits[12] = and(bit_slice.2339, imm_11_0, id=2341, pos=[(0,394,29)])
  bit_slice.2167: bits[12] = bit_slice(sign_ext.1738, start=0, width=12, id=2167, pos=[(0,530,35)])
  concat.2221: bits[12] = concat(bit_slice.2220, array_index.1643, id=2221, pos=[(0,530,35)])
  concat.2206: bits[12] = concat(bit_slice.2205, array_index.1689, id=2206, pos=[(0,530,35)])
  concat.2208: bits[12] = concat(literal.2234, array_index.1691, id=2208, pos=[(0,530,35)])
  concat.2343: bits[12] = concat(bit_slice.2342, bit_slice.2232, id=2343, pos=[(0,530,35)])
  sign_ext.1996: bits[4] = sign_ext(eq.1603, new_bit_count=4, id=1996)
  concat.1908: bits[4] = concat(ugt.1764, eq.1542, eq.1541, eq.1543, id=1908, pos=[(0,527,35)])
  bit_slice.1598: bits[8] = bit_slice(array_index.1562, start=24, width=8, id=1598, pos=[(0,449,40)])
  add.1599: bits[32] = add(array_index.1577, concat.1970, id=1599, pos=[(0,448,49)])
  add.1600: bits[32] = add(array_index.1577, literal.1589, id=1600, pos=[(0,450,47)])
  add.2239: bits[31] = add(bit_slice.2237, literal.2753, id=2239, pos=[(0,452,47)])
  bit_slice.2240: bits[1] = bit_slice(array_index.1577, start=0, width=1, id=2240, pos=[(0,452,47)])
  sign_ext.2550: bits[6] = sign_ext(eq.1695, new_bit_count=6, id=2550)
  concat.2445: bits[6] = concat(eq.1537, eq.1538, eq.1539, eq.1540, eq.1541, eq.1542, id=2445, pos=[(0,531,35)])
  sign_ext.1637: bits[32] = sign_ext(imm_11_0, new_bit_count=32, id=1637, pos=[(0,420,46)])
  eq.1747: bits[1] = eq(array_index.1562, array_index.1577, id=1747, pos=[(0,505,35)])
  new_rd: bits[32] = concat(add.2231, bit_slice.2232, id=2233, pos=[(0,418,41)])
  pc_imm__2: bits[32] = concat(add.2244, bit_slice.2245, id=2246, pos=[(0,503,18)])
  ne.1750: bits[1] = ne(array_index.1562, array_index.1577, id=1750, pos=[(0,506,35)])
  slt.1751: bits[1] = slt(array_index.1562, array_index.1577, id=1751, pos=[(0,507,35)])
  sge.1752: bits[1] = sge(array_index.1562, array_index.1577, id=1752, pos=[(0,508,35)])
  ult.1753: bits[1] = ult(array_index.1562, array_index.1577, id=1753, pos=[(0,509,26)])
  uge.1754: bits[1] = uge(array_index.1562, array_index.1577, id=1754, pos=[(0,510,26)])
  sign_ext.2358: bits[31] = sign_ext(concat.2447, new_bit_count=31, id=2358, pos=[(0,491,7)])
  or.2516: bits[1] = or(or.2093, or.2022, id=2516)
  concat.2198: bits[8] = concat(and.1664, and.1665, eq.1541, eq.1538, eq.1537, eq.1540, id=2198, pos=[(0,526,35)])
  xor.1707: bits[32] = xor(array_index.1562, array_index.1577, id=1707, pos=[(0,352,23)])
  and.1708: bits[32] = and(array_index.1562, array_index.1577, id=1708, pos=[(0,353,23)])
  or.1709: bits[32] = or(array_index.1562, array_index.1577, id=1709, pos=[(0,354,23)])
  shll.1710: bits[32] = shll(array_index.1562, array_index.1577, id=1710, pos=[(0,355,22)])
  sub.1711: bits[32] = sub(array_index.1562, array_index.1577, id=1711, pos=[(0,359,20)])
  add.1712: bits[32] = add(array_index.1562, array_index.1577, id=1712, pos=[(0,362,20)])
  shra.1713: bits[32] = shra(array_index.1562, array_index.1577, id=1713, pos=[(0,367,42)])
  shrl.1714: bits[32] = shrl(array_index.1562, array_index.1577, id=1714, pos=[(0,368,23)])
  one_hot_sel.2688: bits[16] = one_hot_sel(concat.2724, cases=[bit_slice.2431, bit_slice.2432, bit_slice.2433, bit_slice.2434, bit_slice.2435, bit_slice.2436, bit_slice.2437, sign_ext.2548, concat.2438, bit_slice.2451], id=2688, pos=[(0,530,35)])
  one_hot_sel.2692: bits[4] = one_hot_sel(concat.2725, cases=[bit_slice.2419, bit_slice.2420, bit_slice.2421, bit_slice.2422, bit_slice.2423, bit_slice.2424, bit_slice.2425, bit_slice.2443, bit_slice.2211, bit_slice.2450], id=2692, pos=[(0,530,35)])
  one_hot_sel.2286: bits[12] = one_hot_sel(concat.2482, cases=[bit_slice.2160, bit_slice.2161, bit_slice.2162, bit_slice.2163, bit_slice.2164, bit_slice.2165, and.2341, bit_slice.2167, concat.2221, concat.2206, concat.2208, concat.2343], id=2286, pos=[(0,530,35)])
  imm_31_12: bits[20] = bit_slice(ins, start=12, width=20, id=1755, pos=[(0,251,22)])
  literal.1807: bits[12] = literal(value=0, id=1807, pos=[(0,480,50)])
  S_CLASS__1: bits[7] = literal(value=35, id=2749, pos=[(0,53,20)])
  and.1997: bits[4] = and(sign_ext.1996, concat.1908, id=1997)
  dmem__3: bits[8][16] = array_update(dmem, bit_slice.1598, indices=[add.1599], id=1629, pos=[(0,448,24)])
  bit_slice.1630: bits[8] = bit_slice(array_index.1562, start=16, width=8, id=1630, pos=[(0,451,40)])
  add.1631: bits[32] = add(add.1600, concat.1970, id=1631, pos=[(0,450,55)])
  concat.2241: bits[32] = concat(add.2239, bit_slice.2240, id=2241, pos=[(0,452,47)])
  literal.2751: bits[32] = literal(value=3, id=2751, pos=[(0,408,35)])
  or.1662: bits[1] = or(eq.1540, eq.1537, eq.1538, eq.1541, eq.1542, eq.1539, id=1662, pos=[(0,526,35)])
  I_ARITH__3: bits[7] = literal(value=19, id=2744, pos=[(0,50,20)])
  or.1636: bits[1] = or(eq.1542, eq.1541, eq.1543, eq.1540, eq.1539, id=1636, pos=[(0,530,35)])
  and.2354: bits[6] = and(sign_ext.2550, concat.2445, id=2354)
  add.1682: bits[32] = add(array_index.1562, sign_ext.1637, id=1682, pos=[(0,420,38)])
  sel.1780: bits[32] = sel(eq.1747, cases=[new_rd, pc_imm__2], id=1780, pos=[(0,505,13)])
  sel.1781: bits[32] = sel(ne.1750, cases=[new_rd, pc_imm__2], id=1781, pos=[(0,506,13)])
  sel.1782: bits[32] = sel(slt.1751, cases=[new_rd, pc_imm__2], id=1782, pos=[(0,507,13)])
  sel.1783: bits[32] = sel(sge.1752, cases=[new_rd, pc_imm__2], id=1783, pos=[(0,508,13)])
  sel.1784: bits[32] = sel(ult.1753, cases=[new_rd, pc_imm__2], id=1784, pos=[(0,509,13)])
  sel.1785: bits[32] = sel(uge.1754, cases=[new_rd, pc_imm__2], id=1785, pos=[(0,510,13)])
  add.2249: bits[31] = add(bit_slice.2242, sign_ext.2358, id=2249, pos=[(0,491,7)])
  or.2702: bits[1] = or(or.2516, eq.1811, id=2702)
  or.1976: bits[1] = or(eq.1603, eq.1695, not.1835, id=1976)
  new_value: bits[32] = one_hot_sel(concat.2198, cases=[xor.1707, and.1708, or.1709, shll.1710, sub.1711, add.1712, shra.1713, shrl.1714], id=2095, pos=[(0,526,35)])
  new_value__1: bits[32] = concat(one_hot_sel.2688, one_hot_sel.2692, one_hot_sel.2286, id=2452, pos=[(0,530,35)])
  concat.1821: bits[32] = concat(imm_31_12, literal.1807, id=1821, pos=[(0,480,50)])
  ne.1983: bits[1] = ne(opcode__3, S_CLASS__1, id=1983)
  bit_slice.2063: bits[1] = bit_slice(and.1997, start=3, width=1, id=2063)
  dmem__4: bits[8][16] = array_update(dmem__3, bit_slice.1630, indices=[add.1631], id=1672, pos=[(0,450,30)])
  bit_slice.1673: bits[8] = bit_slice(array_index.1562, start=8, width=8, id=1673, pos=[(0,453,40)])
  add.1674: bits[32] = add(concat.2241, concat.1970, id=1674, pos=[(0,452,55)])
  add.1675: bits[32] = add(array_index.1577, literal.2751, id=1675, pos=[(0,454,47)])
  not.1705: bits[1] = not(or.1662, id=1705, pos=[(0,526,35)])
  ne.1678: bits[1] = ne(opcode__3, I_ARITH__3, id=1678, pos=[(0,530,35)])
  not.1679: bits[1] = not(or.1636, id=1679, pos=[(0,530,35)])
  concat.2223: bits[10] = concat(eq.1811, and.2354, or.2022, and.2191, or.2093, id=2223)
  bit_slice.2449: bits[30] = bit_slice(add.1682, start=2, width=30, id=2449)
  bit_slice.2301: bits[30] = bit_slice(sel.1780, start=2, width=30, id=2301)
  bit_slice.2302: bits[30] = bit_slice(sel.1781, start=2, width=30, id=2302)
  bit_slice.2303: bits[30] = bit_slice(sel.1782, start=2, width=30, id=2303)
  bit_slice.2304: bits[30] = bit_slice(sel.1783, start=2, width=30, id=2304)
  bit_slice.2305: bits[30] = bit_slice(sel.1784, start=2, width=30, id=2305)
  bit_slice.2306: bits[30] = bit_slice(sel.1785, start=2, width=30, id=2306)
  bit_slice.2417: bits[30] = bit_slice(add.2249, start=1, width=30, id=2417)
  concat.2679: bits[9] = concat(eq.1811, and.2354, and.2191, or.2516, id=2679)
  bit_slice.2618: bits[1] = bit_slice(pc, start=1, width=1, id=2618)
  bit_slice.2448: bits[1] = bit_slice(add.1682, start=1, width=1, id=2448)
  bit_slice.2620: bits[1] = bit_slice(sel.1780, start=1, width=1, id=2620)
  bit_slice.2621: bits[1] = bit_slice(sel.1781, start=1, width=1, id=2621)
  bit_slice.2622: bits[1] = bit_slice(sel.1782, start=1, width=1, id=2622)
  bit_slice.2623: bits[1] = bit_slice(sel.1783, start=1, width=1, id=2623)
  bit_slice.2624: bits[1] = bit_slice(sel.1784, start=1, width=1, id=2624)
  bit_slice.2625: bits[1] = bit_slice(sel.1785, start=1, width=1, id=2625)
  bit_slice.2412: bits[1] = bit_slice(add.2249, start=0, width=1, id=2412)
  concat.2743: bits[7] = concat(and.2354, or.2702, id=2743)
  bit_slice.2611: bits[1] = bit_slice(sel.1780, start=0, width=1, id=2611)
  bit_slice.2612: bits[1] = bit_slice(sel.1781, start=0, width=1, id=2612)
  bit_slice.2613: bits[1] = bit_slice(sel.1782, start=0, width=1, id=2613)
  bit_slice.2614: bits[1] = bit_slice(sel.1783, start=0, width=1, id=2614)
  bit_slice.2615: bits[1] = bit_slice(sel.1784, start=0, width=1, id=2615)
  bit_slice.2616: bits[1] = bit_slice(sel.1785, start=0, width=1, id=2616)
  concat.1973: bits[5] = concat(eq.1811, eq.1810, or.1610, or.1976, eq.1602, id=1973)
  array_update.1794: bits[32][32] = array_update(regs, new_value, indices=[rd__3], id=1794, pos=[(0,373,21)])
  array_update.1803: bits[32][32] = array_update(regs, new_value__1, indices=[rd__3], id=1803, pos=[(0,431,13)])
  array_update.1832: bits[32][32] = array_update(regs, concat.1821, indices=[rd__3], id=1832, pos=[(0,480,21)])
  array_update.1834: bits[32][32] = array_update(regs, new_rd, indices=[rd__3], id=1834, pos=[(0,491,45)])
  bit_slice.2073: bits[3] = bit_slice(and.1997, start=0, width=3, id=2073)
  or.2030: bits[1] = or(ne.1983, bit_slice.2063, id=2030)
  dmem__5: bits[8][16] = array_update(dmem__4, bit_slice.1673, indices=[add.1674], id=1718, pos=[(0,452,30)])
  bit_slice.1719: bits[8] = bit_slice(array_index.1562, start=0, width=8, id=1719, pos=[(0,455,40)])
  add.1720: bits[32] = add(add.1675, concat.1970, id=1720, pos=[(0,454,55)])
  dmem__6: bits[8][16] = array_update(dmem, bit_slice.1673, indices=[add.1599], id=1721, pos=[(0,458,26)])
  and.1759: bits[1] = and(eq.1602, not.1705, id=1759, pos=[(0,526,35)])
  and.1722: bits[1] = and(or.1610, eq.1507, not.1705, id=1722, pos=[(0,530,35)])
  and.1723: bits[1] = and(or.1610, ne.1678, eq.1506, not.1679, id=1723, pos=[(0,530,35)])
  and.1778: bits[1] = and(eq.1695, not.1705, id=1778, pos=[(0,531,35)])
  one_hot_sel.2308: bits[30] = one_hot_sel(concat.2223, cases=[add.2231, bit_slice.2449, bit_slice.2229, bit_slice.2301, bit_slice.2302, bit_slice.2303, bit_slice.2304, bit_slice.2305, bit_slice.2306, bit_slice.2417], id=2308)
  one_hot_sel.2545: bits[1] = one_hot_sel(concat.2679, cases=[bit_slice.2618, bit_slice.2448, bit_slice.2620, bit_slice.2621, bit_slice.2622, bit_slice.2623, bit_slice.2624, bit_slice.2625, bit_slice.2412], id=2545)
  one_hot_sel.2740: bits[1] = one_hot_sel(concat.2743, cases=[bit_slice.2245, bit_slice.2611, bit_slice.2612, bit_slice.2613, bit_slice.2614, bit_slice.2615, bit_slice.2616], id=2740)
  regs__2: bits[32][32] = one_hot_sel(concat.1973, cases=[array_update.1794, regs, array_update.1803, array_update.1832, array_update.1834], id=1923)
  literal.1715: bits[32] = literal(value=0, id=1715, pos=[(0,371,41)])
  literal.2752: bits[32] = literal(value=0, id=2752, pos=[(0,371,41)])
  concat.2074: bits[4] = concat(bit_slice.2073, or.2030, id=2074)
  array_update.1767: bits[8][16] = array_update(dmem__5, bit_slice.1719, indices=[add.1720], id=1767, pos=[(0,454,30)])
  array_update.1768: bits[8][16] = array_update(dmem__6, bit_slice.1719, indices=[add.1631], id=1768, pos=[(0,460,30)])
  array_update.1769: bits[8][16] = array_update(dmem, bit_slice.1719, indices=[add.1599], id=1769, pos=[(0,463,31)])
  assert_1388__1: token = after_all(id=639)
  not.1792: bits[1] = not(and.1759, id=1792, pos=[(0,526,35)])
  nand.1795: bits[1] = nand(eq.1603, ugt.1764, id=1795, pos=[(0,527,35)])
  not.1770: bits[1] = not(and.1722, id=1770, pos=[(0,530,35)])
  not.1771: bits[1] = not(and.1723, id=1771, pos=[(0,530,35)])
  not.1772: bits[1] = not(and.1724, id=1772, pos=[(0,530,35)])
  not.1804: bits[1] = not(and.1778, id=1804, pos=[(0,531,35)])
  pc__3: bits[32] = concat(one_hot_sel.2308, one_hot_sel.2545, one_hot_sel.2740, id=2646)
  array_update.1872: bits[32][32] = array_update(regs__2, literal.1715, indices=[literal.2752], id=1872, pos=[(0,536,15)])
  dmem__2: bits[8][16] = one_hot_sel(concat.2074, cases=[dmem, array_update.1767, array_update.1768, array_update.1769], id=2032)
  assert_1870: token = assert(assert_1388__1, or.1826, message="Assertion failure via fail! @ xls/examples/riscv_simple.x:535:17-535:56", label="__riscv_simple__run_instruction_13___itok__riscv_simple__run_instruction_unsupported_func3", id=1877)
  assert_1213__1: token = assert(assert_1388__1, not.1792, message="Assertion failure via fail! @ xls/examples/riscv_simple.x:372:18-372:44", label="unmatched_func3", id=1878, pos=[(0,526,35)])
  assert_1267__1: token = assert(assert_1388__1, nand.1795, message="Assertion failure via fail! @ xls/examples/riscv_simple.x:468:21-468:49", label="unsupported_funct3", id=1879, pos=[(0,527,35)])
  assert_1385__1: token = assert(assert_1388__1, not.1770, message="Assertion failure via fail! @ xls/examples/riscv_simple.x:396:25-396:59", label="unmatched_I_ARITH_func3", id=1880, pos=[(0,530,35)])
  assert_1386__1: token = assert(assert_1388__1, not.1771, message="Assertion failure via fail! @ xls/examples/riscv_simple.x:413:25-413:56", label="unmatched_I_LD_func3", id=1881, pos=[(0,530,35)])
  assert_1387__1: token = assert(assert_1388__1, not.1772, message="Assertion failure via fail! @ xls/examples/riscv_simple.x:423:26-423:66", label="unmatched_I_JALR_funct3", id=1882, pos=[(0,530,35)])
  assert_1452__1: token = assert(assert_1388__1, not.1804, message="Assertion failure via fail! @ xls/examples/riscv_simple.x:512:19-512:47", label="__riscv_simple__run_instruction_13___itok__riscv_simple__run_instruction___itok__riscv_simple__run_instruction_10___itok__riscv_simple__run_b_instruction_unsupported_func3", id=1884, pos=[(0,531,35)])
  ret tuple.1875: (bits[32], bits[32][32], bits[8][16]) = tuple(pc__3, array_update.1872, dmem__2, id=1875, pos=[(0,536,4)])
}
