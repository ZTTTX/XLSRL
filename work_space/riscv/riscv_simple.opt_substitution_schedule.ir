package riscv_simple

file_number 0 "xls/examples/riscv_simple.x"

top fn __riscv_simple__run_instruction(pc: bits[32], ins: bits[32], regs: bits[32][32], dmem: bits[8][16]) -> (bits[32], bits[32][32], bits[8][16]) {
  bit_slice.1488: bits[3] = bit_slice(ins, start=12, width=3, id=1488, pos=[(0,174,21)])
  literal.1522: bits[3] = literal(value=7, id=1522, pos=[(0,91,16)])
  literal.1523: bits[3] = literal(value=6, id=1523, pos=[(0,90,16)])
  literal.1524: bits[3] = literal(value=5, id=1524, pos=[(0,88,16)])
  literal.1525: bits[3] = literal(value=4, id=1525, pos=[(0,87,16)])
  literal.1526: bits[3] = literal(value=1, id=1526, pos=[(0,86,16)])
  literal.1527: bits[3] = literal(value=0, id=1527, pos=[(0,85,16)])
  literal.1545: bits[20] = literal(value=0, id=1545, pos=[(0,530,35)])
  bit_slice.1486: bits[12] = bit_slice(ins, start=20, width=12, id=1486, pos=[(0,172,21)])
  bit_slice.1487: bits[5] = bit_slice(ins, start=15, width=5, id=1487, pos=[(0,173,21)])
  eq.1537: bits[1] = eq(bit_slice.1488, literal.1522, id=1537, pos=[(0,530,35)])
  eq.1538: bits[1] = eq(bit_slice.1488, literal.1523, id=1538, pos=[(0,530,35)])
  eq.1539: bits[1] = eq(bit_slice.1488, literal.1524, id=1539, pos=[(0,530,35)])
  eq.1540: bits[1] = eq(bit_slice.1488, literal.1525, id=1540, pos=[(0,530,35)])
  eq.1541: bits[1] = eq(bit_slice.1488, literal.1526, id=1541, pos=[(0,530,35)])
  eq.1542: bits[1] = eq(bit_slice.1488, literal.1527, id=1542, pos=[(0,530,35)])
  concat.1563: bits[32] = concat(literal.1545, bit_slice.1486, id=1563, pos=[(0,530,35)])
  array_index.1562: bits[32] = array_index(regs, indices=[bit_slice.1487], id=1562, pos=[(0,401,27)])
  bit_slice.1490: bits[7] = bit_slice(ins, start=0, width=7, id=1490, pos=[(0,176,21)])
  literal.1501: bits[7] = literal(value=19, id=1501, pos=[(0,50,20)])
  concat.1557: bits[7] = concat(eq.1537, eq.1538, eq.1539, eq.1539, eq.1540, eq.1541, eq.1542, id=1557, pos=[(0,530,35)])
  literal.1500: bits[7] = literal(value=3, id=1500, pos=[(0,49,20)])
  literal.1528: bits[3] = literal(value=2, id=1528, pos=[(0,80,16)])
  add.3061: bits[32] = add(concat.1563, array_index.1562, id=3061, pos=[(0,401,27)])
  literal.1499: bits[7] = literal(value=103, id=1499, pos=[(0,51,20)])
  bit_slice.1492: bits[7] = bit_slice(ins, start=25, width=7, id=1492, pos=[(0,130,19)])
  literal.1575: bits[7] = literal(value=32, id=1575, pos=[(0,69,22)])
  literal.3526: bits[7] = literal(value=32, id=3526, pos=[(0,69,22)])
  eq.1507: bits[1] = eq(bit_slice.1490, literal.1501, id=1507, pos=[(0,530,35)])
  one_hot.1583: bits[8] = one_hot(concat.1557, lsb_prio=true, id=1583, pos=[(0,530,35)])
  eq.1506: bits[1] = eq(bit_slice.1490, literal.1500, id=1506, pos=[(0,530,35)])
  eq.1543: bits[1] = eq(bit_slice.1488, literal.1528, id=1543, pos=[(0,530,35)])
  bit_slice.2224: bits[31] = bit_slice(add.3061, start=1, width=31, id=2224, pos=[(0,407,29)])
  literal.3013: bits[31] = literal(value=1, id=3013, pos=[(0,407,29)])
  literal.1580: bits[7] = literal(value=51, id=1580, pos=[(0,52,20)])
  literal.1581: bits[7] = literal(value=35, id=1581, pos=[(0,53,20)])
  eq.1505: bits[1] = eq(bit_slice.1490, literal.1499, id=1505, pos=[(0,530,35)])
  literal.1648: bits[7] = literal(value=99, id=1648, pos=[(0,54,20)])
  literal.1790: bits[7] = literal(value=55, id=1790, pos=[(0,55,20)])
  literal.1791: bits[7] = literal(value=111, id=1791, pos=[(0,56,20)])
  ne.1595: bits[1] = ne(bit_slice.1492, literal.1575, id=1595, pos=[(0,526,35)])
  eq.1596: bits[1] = eq(bit_slice.1492, literal.3526, id=1596, pos=[(0,526,35)])
  sign_ext.2351: bits[7] = sign_ext(eq.1507, new_bit_count=7, id=2351, pos=[(0,530,35)])
  bit_slice.2196: bits[7] = bit_slice(one_hot.1583, start=0, width=7, id=2196, pos=[(0,530,35)])
  sign_ext.2349: bits[5] = sign_ext(eq.1506, new_bit_count=5, id=2349, pos=[(0,530,35)])
  concat.2219: bits[5] = concat(eq.1539, eq.1540, eq.1543, eq.1541, eq.1542, id=2219, pos=[(0,530,35)])
  add.3339: bits[31] = add(bit_slice.2224, literal.3013, id=3339, pos=[(0,407,29)])
  bit_slice.2227: bits[1] = bit_slice(add.3061, start=0, width=1, id=2227, pos=[(0,407,29)])
  bit_slice.1547: bits[1] = bit_slice(ins, start=31, width=1, id=1547, pos=[(0,288,21)])
  bit_slice.1548: bits[1] = bit_slice(ins, start=7, width=1, id=1548, pos=[(0,294,21)])
  bit_slice.1549: bits[6] = bit_slice(ins, start=25, width=6, id=1549, pos=[(0,289,21)])
  bit_slice.1550: bits[4] = bit_slice(ins, start=8, width=4, id=1550, pos=[(0,293,21)])
  literal.3521: bits[3] = literal(value=0, id=3521, pos=[(0,85,16)])
  eq.1602: bits[1] = eq(bit_slice.1490, literal.1580, id=1602)
  eq.1603: bits[1] = eq(bit_slice.1490, literal.1581, id=1603)
  or.1610: bits[1] = or(eq.1507, eq.1505, eq.1506, id=1610, pos=[(0,528,6)])
  eq.1695: bits[1] = eq(bit_slice.1490, literal.1648, id=1695)
  eq.1810: bits[1] = eq(bit_slice.1490, literal.1790, id=1810)
  eq.1811: bits[1] = eq(bit_slice.1490, literal.1791, id=1811)
  sign_ext.1620: bits[2] = sign_ext(eq.1539, new_bit_count=2, id=1620, pos=[(0,526,35)])
  concat.1621: bits[2] = concat(ne.1595, eq.1596, id=1621, pos=[(0,526,35)])
  and.2197: bits[7] = and(sign_ext.2351, bit_slice.2196, id=2197, pos=[(0,530,35)])
  literal.3045: bits[32] = literal(value=1, id=3045, pos=[(0,404,56)])
  and.2194: bits[5] = and(sign_ext.2349, concat.2219, id=2194, pos=[(0,530,35)])
  concat.2228: bits[32] = concat(add.3339, bit_slice.2227, id=2228, pos=[(0,407,29)])
  literal.3041: bits[32] = literal(value=3, id=3041, pos=[(0,408,35)])
  bit_slice.2229: bits[30] = bit_slice(pc, start=2, width=30, id=2229, pos=[(0,418,41)])
  literal.3067: bits[30] = literal(value=1, id=3067, pos=[(0,418,41)])
  literal.3519: bits[1] = literal(value=0, id=3519, pos=[(0,527,35)])
  bit_slice.1489: bits[5] = bit_slice(ins, start=7, width=5, id=1489, pos=[(0,175,21)])
  bit_slice.1493: bits[5] = bit_slice(ins, start=20, width=5, id=1493, pos=[(0,131,19)])
  concat.2446: bits[12] = concat(bit_slice.1547, bit_slice.1548, bit_slice.1549, bit_slice.1550, id=2446, pos=[(0,503,18)])
  nor.1680: bits[1] = nor(eq.1507, eq.1506, id=1680, pos=[(0,530,35)])
  ne.1561: bits[1] = ne(bit_slice.1488, literal.3521, id=1561, pos=[(0,530,35)])
  or.1826: bits[1] = or(eq.1602, eq.1603, or.1610, eq.1695, eq.1810, eq.1811, id=1826)
  and.1664: bits[2] = and(sign_ext.1620, concat.1621, id=1664, pos=[(0,526,35)])
  bit_slice.3483: bits[1] = bit_slice(and.2197, start=1, width=1, id=3483, pos=[(0,530,35)])
  bit_slice.3485: bits[1] = bit_slice(and.2197, start=3, width=1, id=3485, pos=[(0,530,35)])
  array_index.1642: bits[8] = array_index(dmem, indices=[add.3061], id=1642, pos=[(0,404,30)])
  add.3340: bits[32] = add(add.3061, literal.3045, id=3340, pos=[(0,401,33)])
  bit_slice.2644: bits[1] = bit_slice(and.2194, start=1, width=1, id=2644, pos=[(0,530,35)])
  bit_slice.2406: bits[1] = bit_slice(and.2194, start=4, width=1, id=2406, pos=[(0,530,35)])
  array_index.1688: bits[8] = array_index(dmem, indices=[concat.2228], id=1688, pos=[(0,407,23)])
  add.3341: bits[32] = add(add.3061, literal.3041, id=3341, pos=[(0,401,33)])
  array_index.1646: bits[32] = array_index(regs, indices=[add.3061], id=1646, pos=[(0,410,28)])
  add.3342: bits[30] = add(bit_slice.2229, literal.3067, id=3342, pos=[(0,418,41)])
  literal.3522: bits[3] = literal(value=2, id=3522, pos=[(0,80,16)])
  literal.3520: bits[20] = literal(value=0, id=3520, pos=[(0,530,35)])
  concat.3413: bits[13] = concat(literal.3519, bit_slice.1492, bit_slice.1489, id=3413, pos=[(0,527,35)])
  literal.3354: bits[13] = literal(value=1, id=3354, pos=[(0,527,35)])
  array_index.1577: bits[32] = array_index(regs, indices=[bit_slice.1493], id=1577, pos=[(0,448,35)])
  sign_ext.2356: bits[31] = sign_ext(concat.2446, new_bit_count=31, id=2356, pos=[(0,503,18)])
  bit_slice.2242: bits[31] = bit_slice(pc, start=1, width=31, id=2242, pos=[(0,503,18)])
  bit_slice.1659: bits[8] = bit_slice(ins, start=12, width=8, id=1659, pos=[(0,325,22)])
  bit_slice.1660: bits[1] = bit_slice(ins, start=20, width=1, id=1660, pos=[(0,324,22)])
  bit_slice.1661: bits[10] = bit_slice(ins, start=21, width=10, id=1661, pos=[(0,323,22)])
  and.1724: bits[1] = and(or.1610, nor.1680, eq.1505, ne.1561, id=1724, pos=[(0,530,35)])
  not.3011: bits[1] = not(or.1826, id=3011)
  sign_ext.1622: bits[2] = sign_ext(eq.1542, new_bit_count=2, id=1622, pos=[(0,526,35)])
  bit_slice.3480: bits[1] = bit_slice(and.1664, start=1, width=1, id=3480, pos=[(0,526,35)])
  and.2191: bits[1] = and(eq.1505, eq.1542, id=2191, pos=[(0,530,35)])
  bit_slice.3511: bits[3] = bit_slice(and.2194, start=0, width=3, id=3511, pos=[(0,530,35)])
  bit_slice.3515: bits[2] = bit_slice(and.2197, start=4, width=2, id=3515, pos=[(0,530,35)])
  bit_slice.3484: bits[1] = bit_slice(and.2197, start=2, width=1, id=3484, pos=[(0,530,35)])
  or.3364: bits[1] = or(bit_slice.3483, bit_slice.3485, id=3364, pos=[(0,530,35)])
  bit_slice.3482: bits[1] = bit_slice(and.2197, start=0, width=1, id=3482, pos=[(0,530,35)])
  shll.3065: bits[32] = shll(array_index.1562, bit_slice.1486, id=3065, pos=[(0,172,21)])
  xor.1732: bits[32] = xor(array_index.1562, concat.1563, id=1732, pos=[(0,390,29)])
  shra.1734: bits[32] = shra(array_index.1562, bit_slice.1486, id=1734, pos=[(0,392,39)])
  or.1735: bits[32] = or(array_index.1562, concat.1563, id=1735, pos=[(0,393,29)])
  sign_ext.1738: bits[32] = sign_ext(array_index.1642, new_bit_count=32, id=1738, pos=[(0,403,25)])
  bit_slice.2627: bits[1] = bit_slice(array_index.1642, start=7, width=1, id=2627, pos=[(0,530,35)])
  array_index.1643: bits[8] = array_index(dmem, indices=[add.3340], id=1643, pos=[(0,404,44)])
  bit_slice.2645: bits[1] = bit_slice(and.2194, start=2, width=1, id=2645, pos=[(0,530,35)])
  or.2509: bits[1] = or(bit_slice.2644, bit_slice.2406, id=2509, pos=[(0,530,35)])
  bit_slice.2643: bits[1] = bit_slice(and.2194, start=0, width=1, id=2643, pos=[(0,530,35)])
  bit_slice.3507: bits[2] = bit_slice(and.2194, start=2, width=2, id=3507, pos=[(0,530,35)])
  bit_slice.3517: bits[3] = bit_slice(and.2197, start=4, width=3, id=3517, pos=[(0,530,35)])
  bit_slice.2339: bits[12] = bit_slice(array_index.1562, start=0, width=12, id=2339, pos=[(0,401,27)])
  bit_slice.2220: bits[4] = bit_slice(array_index.1642, start=0, width=4, id=2220, pos=[(0,530,35)])
  bit_slice.2205: bits[4] = bit_slice(array_index.1688, start=0, width=4, id=2205, pos=[(0,530,35)])
  array_index.1689: bits[8] = array_index(dmem, indices=[add.3341], id=1689, pos=[(0,408,23)])
  literal.2234: bits[4] = literal(value=0, id=2234, pos=[(0,530,35)])
  array_index.1691: bits[8] = array_index(dmem, indices=[array_index.1646], id=1691, pos=[(0,410,23)])
  bit_slice.2342: bits[10] = bit_slice(add.3342, start=0, width=10, id=2342, pos=[(0,530,35)])
  bit_slice.2232: bits[2] = bit_slice(pc, start=0, width=2, id=2232, pos=[(0,418,41)])
  ugt.1764: bits[1] = ugt(bit_slice.1488, literal.3522, id=1764, pos=[(0,527,35)])
  concat.1970: bits[32] = concat(literal.3520, bit_slice.1492, bit_slice.1489, id=1970, pos=[(0,527,35)])
  literal.3356: bits[19] = literal(value=0, id=3356, pos=[(0,527,35)])
  add.3348: bits[13] = add(concat.3413, literal.3354, id=3348, pos=[(0,527,35)])
  bit_slice.2237: bits[31] = bit_slice(array_index.1577, start=1, width=31, id=2237, pos=[(0,452,47)])
  literal.3524: bits[31] = literal(value=1, id=3524, pos=[(0,407,29)])
  add.3035: bits[31] = add(sign_ext.2356, bit_slice.2242, id=3035, pos=[(0,503,18)])
  bit_slice.2245: bits[1] = bit_slice(pc, start=0, width=1, id=2245, pos=[(0,503,18)])
  concat.2447: bits[20] = concat(bit_slice.1547, bit_slice.1659, bit_slice.1660, bit_slice.1661, id=2447, pos=[(0,491,7)])
  or.2093: bits[1] = or(eq.1602, eq.1603, eq.1810, eq.1507, eq.1506, id=2093)
  or.2022: bits[1] = or(and.1724, not.3011, id=2022)
  bit_slice.3478: bits[1] = bit_slice(and.1664, start=0, width=1, id=3478, pos=[(0,526,35)])
  and.1665: bits[2] = and(sign_ext.1622, concat.1621, id=1665, pos=[(0,526,35)])
  or.3409: bits[1] = or(eq.1541, bit_slice.3480, id=3409, pos=[(0,526,35)])
  concat.3516: bits[9] = concat(and.2191, bit_slice.3511, bit_slice.3515, bit_slice.3484, or.3364, bit_slice.3482, id=3516, pos=[(0,530,35)])
  bit_slice.2431: bits[16] = bit_slice(add.3061, start=16, width=16, id=2431, pos=[(0,530,35)])
  bit_slice.2432: bits[16] = bit_slice(shll.3065, start=16, width=16, id=2432, pos=[(0,530,35)])
  bit_slice.2433: bits[16] = bit_slice(xor.1732, start=16, width=16, id=2433, pos=[(0,530,35)])
  bit_slice.2435: bits[16] = bit_slice(shra.1734, start=16, width=16, id=2435, pos=[(0,530,35)])
  bit_slice.2436: bits[16] = bit_slice(or.1735, start=16, width=16, id=2436, pos=[(0,530,35)])
  bit_slice.2437: bits[16] = bit_slice(sign_ext.1738, start=16, width=16, id=2437, pos=[(0,530,35)])
  sign_ext.2548: bits[16] = sign_ext(bit_slice.2627, new_bit_count=16, id=2548, pos=[(0,530,35)])
  concat.2438: bits[16] = concat(array_index.1642, array_index.1643, id=2438, pos=[(0,530,35)])
  bit_slice.2451: bits[16] = bit_slice(add.3342, start=14, width=16, id=2451, pos=[(0,530,35)])
  concat.3506: bits[9] = concat(and.2191, bit_slice.2645, or.2509, bit_slice.2643, bit_slice.3515, bit_slice.3484, or.3364, bit_slice.3482, id=3506, pos=[(0,530,35)])
  bit_slice.2419: bits[4] = bit_slice(add.3061, start=12, width=4, id=2419, pos=[(0,530,35)])
  bit_slice.2420: bits[4] = bit_slice(shll.3065, start=12, width=4, id=2420, pos=[(0,530,35)])
  bit_slice.2421: bits[4] = bit_slice(xor.1732, start=12, width=4, id=2421, pos=[(0,530,35)])
  bit_slice.2423: bits[4] = bit_slice(shra.1734, start=12, width=4, id=2423, pos=[(0,530,35)])
  bit_slice.2424: bits[4] = bit_slice(or.1735, start=12, width=4, id=2424, pos=[(0,530,35)])
  bit_slice.2425: bits[4] = bit_slice(sign_ext.1738, start=12, width=4, id=2425, pos=[(0,530,35)])
  bit_slice.2443: bits[4] = bit_slice(array_index.1642, start=4, width=4, id=2443, pos=[(0,530,35)])
  bit_slice.2211: bits[4] = bit_slice(array_index.1688, start=4, width=4, id=2211, pos=[(0,530,35)])
  bit_slice.2450: bits[4] = bit_slice(add.3342, start=10, width=4, id=2450, pos=[(0,530,35)])
  concat.3518: bits[11] = concat(and.2191, bit_slice.3507, or.2509, bit_slice.2643, bit_slice.3517, bit_slice.3484, or.3364, bit_slice.3482, id=3518, pos=[(0,530,35)])
  bit_slice.2160: bits[12] = bit_slice(add.3061, start=0, width=12, id=2160, pos=[(0,530,35)])
  bit_slice.2161: bits[12] = bit_slice(shll.3065, start=0, width=12, id=2161, pos=[(0,530,35)])
  bit_slice.2162: bits[12] = bit_slice(xor.1732, start=0, width=12, id=2162, pos=[(0,530,35)])
  bit_slice.2164: bits[12] = bit_slice(shra.1734, start=0, width=12, id=2164, pos=[(0,530,35)])
  bit_slice.2165: bits[12] = bit_slice(or.1735, start=0, width=12, id=2165, pos=[(0,530,35)])
  and.2341: bits[12] = and(bit_slice.2339, bit_slice.1486, id=2341, pos=[(0,394,29)])
  bit_slice.2167: bits[12] = bit_slice(sign_ext.1738, start=0, width=12, id=2167, pos=[(0,530,35)])
  concat.2221: bits[12] = concat(bit_slice.2220, array_index.1643, id=2221, pos=[(0,530,35)])
  concat.2206: bits[12] = concat(bit_slice.2205, array_index.1689, id=2206, pos=[(0,530,35)])
  concat.2208: bits[12] = concat(literal.2234, array_index.1691, id=2208, pos=[(0,530,35)])
  concat.2343: bits[12] = concat(bit_slice.2342, bit_slice.2232, id=2343, pos=[(0,530,35)])
  sign_ext.1996: bits[4] = sign_ext(eq.1603, new_bit_count=4, id=1996)
  concat.1908: bits[4] = concat(ugt.1764, eq.1542, eq.1541, eq.1543, id=1908, pos=[(0,527,35)])
  bit_slice.1598: bits[8] = bit_slice(array_index.1562, start=24, width=8, id=1598, pos=[(0,449,40)])
  add.3049: bits[32] = add(concat.1970, array_index.1577, id=3049, pos=[(0,448,35)])
  concat.3357: bits[32] = concat(literal.3356, add.3348, id=3357, pos=[(0,527,35)])
  add.3344: bits[31] = add(bit_slice.2237, literal.3524, id=3344, pos=[(0,452,47)])
  bit_slice.2240: bits[1] = bit_slice(array_index.1577, start=0, width=1, id=2240, pos=[(0,452,47)])
  literal.3355: bits[13] = literal(value=3, id=3355, pos=[(0,527,35)])
  sign_ext.2550: bits[6] = sign_ext(eq.1695, new_bit_count=6, id=2550)
  concat.2445: bits[6] = concat(eq.1537, eq.1538, eq.1539, eq.1540, eq.1541, eq.1542, id=2445, pos=[(0,531,35)])
  sign_ext.1637: bits[32] = sign_ext(bit_slice.1486, new_bit_count=32, id=1637, pos=[(0,420,46)])
  eq.1747: bits[1] = eq(array_index.1562, array_index.1577, id=1747, pos=[(0,505,35)])
  concat.2233: bits[32] = concat(add.3342, bit_slice.2232, id=2233, pos=[(0,418,41)])
  concat.2246: bits[32] = concat(add.3035, bit_slice.2245, id=2246, pos=[(0,503,18)])
  ne.1750: bits[1] = ne(array_index.1562, array_index.1577, id=1750, pos=[(0,506,35)])
  slt.1751: bits[1] = slt(array_index.1562, array_index.1577, id=1751, pos=[(0,507,35)])
  sge.1752: bits[1] = sge(array_index.1562, array_index.1577, id=1752, pos=[(0,508,35)])
  ult.1753: bits[1] = ult(array_index.1562, array_index.1577, id=1753, pos=[(0,509,26)])
  uge.1754: bits[1] = uge(array_index.1562, array_index.1577, id=1754, pos=[(0,510,26)])
  sign_ext.2358: bits[31] = sign_ext(concat.2447, new_bit_count=31, id=2358, pos=[(0,491,7)])
  or.2516: bits[1] = or(or.2093, or.2022, id=2516)
  concat.3510: bits[7] = concat(bit_slice.3478, and.1665, or.3409, eq.1538, eq.1537, eq.1540, id=3510, pos=[(0,526,35)])
  xor.1707: bits[32] = xor(array_index.1562, array_index.1577, id=1707, pos=[(0,352,23)])
  and.1708: bits[32] = and(array_index.1562, array_index.1577, id=1708, pos=[(0,353,23)])
  or.1709: bits[32] = or(array_index.1562, array_index.1577, id=1709, pos=[(0,354,23)])
  shll.3057: bits[32] = shll(array_index.1562, array_index.1577, id=3057, pos=[(0,448,35)])
  sub.3055: bits[32] = sub(array_index.1562, array_index.1577, id=3055, pos=[(0,448,35)])
  add.3053: bits[32] = add(array_index.1577, array_index.1562, id=3053, pos=[(0,401,27)])
  shra.1713: bits[32] = shra(array_index.1562, array_index.1577, id=1713, pos=[(0,367,42)])
  one_hot_sel.3372: bits[16] = one_hot_sel(concat.3516, cases=[bit_slice.2431, bit_slice.2432, bit_slice.2433, bit_slice.2435, bit_slice.2436, bit_slice.2437, sign_ext.2548, concat.2438, bit_slice.2451], id=3372, pos=[(0,530,35)])
  one_hot_sel.3385: bits[4] = one_hot_sel(concat.3506, cases=[bit_slice.2419, bit_slice.2420, bit_slice.2421, bit_slice.2423, bit_slice.2424, bit_slice.2425, bit_slice.2443, bit_slice.2211, bit_slice.2450], id=3385, pos=[(0,530,35)])
  one_hot_sel.3400: bits[12] = one_hot_sel(concat.3518, cases=[bit_slice.2160, bit_slice.2161, bit_slice.2162, bit_slice.2164, bit_slice.2165, and.2341, bit_slice.2167, concat.2221, concat.2206, concat.2208, concat.2343], id=3400, pos=[(0,530,35)])
  bit_slice.1755: bits[20] = bit_slice(ins, start=12, width=20, id=1755, pos=[(0,251,22)])
  literal.1807: bits[12] = literal(value=0, id=1807, pos=[(0,480,50)])
  literal.3525: bits[7] = literal(value=35, id=3525, pos=[(0,53,20)])
  and.1997: bits[4] = and(sign_ext.1996, concat.1908, id=1997)
  array_update.1629: bits[8][16] = array_update(dmem, bit_slice.1598, indices=[add.3049], id=1629, pos=[(0,448,24)])
  bit_slice.1630: bits[8] = bit_slice(array_index.1562, start=16, width=8, id=1630, pos=[(0,451,40)])
  add.3027: bits[32] = add(concat.3357, array_index.1577, id=3027, pos=[(0,448,35)])
  concat.2241: bits[32] = concat(add.3344, bit_slice.2240, id=2241, pos=[(0,452,47)])
  literal.3528: bits[19] = literal(value=0, id=3528, pos=[(0,527,35)])
  add.3352: bits[13] = add(concat.3413, literal.3355, id=3352, pos=[(0,527,35)])
  or.1662: bits[1] = or(eq.1540, eq.1537, eq.1538, eq.1541, eq.1542, eq.1539, id=1662, pos=[(0,526,35)])
  literal.3523: bits[7] = literal(value=19, id=3523, pos=[(0,50,20)])
  or.1636: bits[1] = or(eq.1542, eq.1541, eq.1543, eq.1540, eq.1539, id=1636, pos=[(0,530,35)])
  and.2354: bits[6] = and(sign_ext.2550, concat.2445, id=2354)
  add.3059: bits[32] = add(sign_ext.1637, array_index.1562, id=3059, pos=[(0,401,27)])
  sel.1780: bits[32] = sel(eq.1747, cases=[concat.2233, concat.2246], id=1780, pos=[(0,505,13)])
  sel.1781: bits[32] = sel(ne.1750, cases=[concat.2233, concat.2246], id=1781, pos=[(0,506,13)])
  sel.1782: bits[32] = sel(slt.1751, cases=[concat.2233, concat.2246], id=1782, pos=[(0,507,13)])
  sel.1783: bits[32] = sel(sge.1752, cases=[concat.2233, concat.2246], id=1783, pos=[(0,508,13)])
  sel.1784: bits[32] = sel(ult.1753, cases=[concat.2233, concat.2246], id=1784, pos=[(0,509,13)])
  sel.1785: bits[32] = sel(uge.1754, cases=[concat.2233, concat.2246], id=1785, pos=[(0,510,13)])
  add.3017: bits[31] = add(sign_ext.2358, bit_slice.2242, id=3017, pos=[(0,503,18)])
  or.2702: bits[1] = or(or.2516, eq.1811, id=2702)
  or.1976: bits[1] = or(eq.1603, eq.1695, not.3011, id=1976)
  one_hot_sel.3411: bits[32] = one_hot_sel(concat.3510, cases=[xor.1707, and.1708, or.1709, shll.3057, sub.3055, add.3053, shra.1713], id=3411, pos=[(0,526,35)])
  concat.2452: bits[32] = concat(one_hot_sel.3372, one_hot_sel.3385, one_hot_sel.3400, id=2452, pos=[(0,530,35)])
  concat.1821: bits[32] = concat(bit_slice.1755, literal.1807, id=1821, pos=[(0,480,50)])
  ne.1983: bits[1] = ne(bit_slice.1490, literal.3525, id=1983)
  bit_slice.2063: bits[1] = bit_slice(and.1997, start=3, width=1, id=2063)
  array_update.1672: bits[8][16] = array_update(array_update.1629, bit_slice.1630, indices=[add.3027], id=1672, pos=[(0,450,30)])
  bit_slice.1673: bits[8] = bit_slice(array_index.1562, start=8, width=8, id=1673, pos=[(0,453,40)])
  add.2999: bits[32] = add(concat.1970, concat.2241, id=2999, pos=[(0,452,47)])
  concat.3359: bits[32] = concat(literal.3528, add.3352, id=3359, pos=[(0,527,35)])
  not.3039: bits[1] = not(or.1662, id=3039, pos=[(0,526,35)])
  ne.1678: bits[1] = ne(bit_slice.1490, literal.3523, id=1678, pos=[(0,530,35)])
  not.3037: bits[1] = not(or.1636, id=3037, pos=[(0,530,35)])
  concat.2223: bits[10] = concat(eq.1811, and.2354, or.2022, and.2191, or.2093, id=2223)
  bit_slice.2449: bits[30] = bit_slice(add.3059, start=2, width=30, id=2449)
  bit_slice.2301: bits[30] = bit_slice(sel.1780, start=2, width=30, id=2301)
  bit_slice.2302: bits[30] = bit_slice(sel.1781, start=2, width=30, id=2302)
  bit_slice.2303: bits[30] = bit_slice(sel.1782, start=2, width=30, id=2303)
  bit_slice.2304: bits[30] = bit_slice(sel.1783, start=2, width=30, id=2304)
  bit_slice.2305: bits[30] = bit_slice(sel.1784, start=2, width=30, id=2305)
  bit_slice.2306: bits[30] = bit_slice(sel.1785, start=2, width=30, id=2306)
  bit_slice.2417: bits[30] = bit_slice(add.3017, start=1, width=30, id=2417)
  concat.2679: bits[9] = concat(eq.1811, and.2354, and.2191, or.2516, id=2679)
  bit_slice.2618: bits[1] = bit_slice(pc, start=1, width=1, id=2618)
  bit_slice.2448: bits[1] = bit_slice(add.3059, start=1, width=1, id=2448)
  bit_slice.2620: bits[1] = bit_slice(sel.1780, start=1, width=1, id=2620)
  bit_slice.2621: bits[1] = bit_slice(sel.1781, start=1, width=1, id=2621)
  bit_slice.2622: bits[1] = bit_slice(sel.1782, start=1, width=1, id=2622)
  bit_slice.2623: bits[1] = bit_slice(sel.1783, start=1, width=1, id=2623)
  bit_slice.2624: bits[1] = bit_slice(sel.1784, start=1, width=1, id=2624)
  bit_slice.2625: bits[1] = bit_slice(sel.1785, start=1, width=1, id=2625)
  bit_slice.2412: bits[1] = bit_slice(add.3017, start=0, width=1, id=2412)
  concat.2743: bits[7] = concat(and.2354, or.2702, id=2743)
  bit_slice.2611: bits[1] = bit_slice(sel.1780, start=0, width=1, id=2611)
  bit_slice.2612: bits[1] = bit_slice(sel.1781, start=0, width=1, id=2612)
  bit_slice.2613: bits[1] = bit_slice(sel.1782, start=0, width=1, id=2613)
  bit_slice.2614: bits[1] = bit_slice(sel.1783, start=0, width=1, id=2614)
  bit_slice.2615: bits[1] = bit_slice(sel.1784, start=0, width=1, id=2615)
  bit_slice.2616: bits[1] = bit_slice(sel.1785, start=0, width=1, id=2616)
  concat.1973: bits[5] = concat(eq.1811, eq.1810, or.1610, or.1976, eq.1602, id=1973)
  array_update.1794: bits[32][32] = array_update(regs, one_hot_sel.3411, indices=[bit_slice.1489], id=1794, pos=[(0,373,21)])
  array_update.1803: bits[32][32] = array_update(regs, concat.2452, indices=[bit_slice.1489], id=1803, pos=[(0,431,13)])
  array_update.1832: bits[32][32] = array_update(regs, concat.1821, indices=[bit_slice.1489], id=1832, pos=[(0,480,21)])
  array_update.1834: bits[32][32] = array_update(regs, concat.2233, indices=[bit_slice.1489], id=1834, pos=[(0,491,45)])
  bit_slice.2073: bits[3] = bit_slice(and.1997, start=0, width=3, id=2073)
  or.2030: bits[1] = or(ne.1983, bit_slice.2063, id=2030)
  array_update.1718: bits[8][16] = array_update(array_update.1672, bit_slice.1673, indices=[add.2999], id=1718, pos=[(0,452,30)])
  bit_slice.1719: bits[8] = bit_slice(array_index.1562, start=0, width=8, id=1719, pos=[(0,455,40)])
  add.3021: bits[32] = add(concat.3359, array_index.1577, id=3021, pos=[(0,448,35)])
  array_update.1721: bits[8][16] = array_update(dmem, bit_slice.1673, indices=[add.3049], id=1721, pos=[(0,458,26)])
  and.1759: bits[1] = and(eq.1602, not.3039, id=1759, pos=[(0,526,35)])
  and.1722: bits[1] = and(or.1610, eq.1507, not.3039, id=1722, pos=[(0,530,35)])
  and.1723: bits[1] = and(or.1610, ne.1678, eq.1506, not.3037, id=1723, pos=[(0,530,35)])
  and.1778: bits[1] = and(eq.1695, not.3039, id=1778, pos=[(0,531,35)])
  one_hot_sel.2308: bits[30] = one_hot_sel(concat.2223, cases=[add.3342, bit_slice.2449, bit_slice.2229, bit_slice.2301, bit_slice.2302, bit_slice.2303, bit_slice.2304, bit_slice.2305, bit_slice.2306, bit_slice.2417], id=2308)
  one_hot_sel.2545: bits[1] = one_hot_sel(concat.2679, cases=[bit_slice.2618, bit_slice.2448, bit_slice.2620, bit_slice.2621, bit_slice.2622, bit_slice.2623, bit_slice.2624, bit_slice.2625, bit_slice.2412], id=2545)
  one_hot_sel.2740: bits[1] = one_hot_sel(concat.2743, cases=[bit_slice.2245, bit_slice.2611, bit_slice.2612, bit_slice.2613, bit_slice.2614, bit_slice.2615, bit_slice.2616], id=2740)
  one_hot_sel.1923: bits[32][32] = one_hot_sel(concat.1973, cases=[array_update.1794, regs, array_update.1803, array_update.1832, array_update.1834], id=1923)
  literal.1715: bits[32] = literal(value=0, id=1715, pos=[(0,371,41)])
  literal.3527: bits[32] = literal(value=0, id=3527, pos=[(0,371,41)])
  concat.2074: bits[4] = concat(bit_slice.2073, or.2030, id=2074)
  array_update.1767: bits[8][16] = array_update(array_update.1718, bit_slice.1719, indices=[add.3021], id=1767, pos=[(0,454,30)])
  array_update.1768: bits[8][16] = array_update(array_update.1721, bit_slice.1719, indices=[add.3027], id=1768, pos=[(0,460,30)])
  array_update.1769: bits[8][16] = array_update(dmem, bit_slice.1719, indices=[add.3049], id=1769, pos=[(0,463,31)])
  after_all.639: token = after_all(id=639)
  not.3007: bits[1] = not(and.1759, id=3007, pos=[(0,526,35)])
  nand.1795: bits[1] = nand(eq.1603, ugt.1764, id=1795, pos=[(0,527,35)])
  not.3005: bits[1] = not(and.1722, id=3005, pos=[(0,530,35)])
  not.3001: bits[1] = not(and.1723, id=3001, pos=[(0,530,35)])
  not.3009: bits[1] = not(and.1724, id=3009, pos=[(0,530,35)])
  not.3003: bits[1] = not(and.1778, id=3003, pos=[(0,531,35)])
  concat.2646: bits[32] = concat(one_hot_sel.2308, one_hot_sel.2545, one_hot_sel.2740, id=2646)
  array_update.1872: bits[32][32] = array_update(one_hot_sel.1923, literal.1715, indices=[literal.3527], id=1872, pos=[(0,536,15)])
  one_hot_sel.2032: bits[8][16] = one_hot_sel(concat.2074, cases=[dmem, array_update.1767, array_update.1768, array_update.1769], id=2032)
  assert.1877: token = assert(after_all.639, or.1826, message="Assertion failure via fail! @ xls/examples/riscv_simple.x:535:17-535:56", label="__riscv_simple__run_instruction_13___itok__riscv_simple__run_instruction_unsupported_func3", id=1877)
  assert.1878: token = assert(after_all.639, not.3007, message="Assertion failure via fail! @ xls/examples/riscv_simple.x:372:18-372:44", label="unmatched_func3", id=1878, pos=[(0,526,35)])
  assert.1879: token = assert(after_all.639, nand.1795, message="Assertion failure via fail! @ xls/examples/riscv_simple.x:468:21-468:49", label="unsupported_funct3", id=1879, pos=[(0,527,35)])
  assert.1880: token = assert(after_all.639, not.3005, message="Assertion failure via fail! @ xls/examples/riscv_simple.x:396:25-396:59", label="unmatched_I_ARITH_func3", id=1880, pos=[(0,530,35)])
  assert.1881: token = assert(after_all.639, not.3001, message="Assertion failure via fail! @ xls/examples/riscv_simple.x:413:25-413:56", label="unmatched_I_LD_func3", id=1881, pos=[(0,530,35)])
  assert.1882: token = assert(after_all.639, not.3009, message="Assertion failure via fail! @ xls/examples/riscv_simple.x:423:26-423:66", label="unmatched_I_JALR_funct3", id=1882, pos=[(0,530,35)])
  assert.1884: token = assert(after_all.639, not.3003, message="Assertion failure via fail! @ xls/examples/riscv_simple.x:512:19-512:47", label="__riscv_simple__run_instruction_13___itok__riscv_simple__run_instruction___itok__riscv_simple__run_instruction_10___itok__riscv_simple__run_b_instruction_unsupported_func3", id=1884, pos=[(0,531,35)])
  ret tuple.1875: (bits[32], bits[32][32], bits[8][16]) = tuple(concat.2646, array_update.1872, one_hot_sel.2032, id=1875, pos=[(0,536,4)])
}

block xls_test(clk: clock, pc: bits[32], ins: bits[32], regs: bits[32][32], dmem: bits[8][16], out: (bits[32], bits[32][32], bits[8][16])) {
  reg p0_pc(bits[32])
  reg p0_ins(bits[32])
  reg p0_regs(bits[32][32])
  reg p0_dmem(bits[8][16])
  reg p1_regs(bits[32][32])
  reg p1_concat_3807(bits[5])
  reg p1_array_update_3808(bits[32][32])
  reg p1_array_update_3809(bits[32][32])
  reg p1_array_update_3810(bits[32][32])
  reg p1_array_update_3811(bits[32][32])
  reg p1_concat_3836(bits[32])
  reg p1_one_hot_sel_3837(bits[8][16])
  reg p2_one_hot_sel_3861(bits[32][32])
  reg p2_concat_3836(bits[32])
  reg p2_one_hot_sel_3837(bits[8][16])
  reg p3_tuple_3871((bits[32], bits[32][32], bits[8][16]))
  pc: bits[32] = input_port(name=pc, id=3531)
  ins: bits[32] = input_port(name=ins, id=3529)
  regs: bits[32][32] = input_port(name=regs, id=3530)
  dmem: bits[8][16] = input_port(name=dmem, id=3532)
  register_write.3533: () = register_write(pc, register=p0_pc, id=3533)
  register_write.3537: () = register_write(regs, register=p0_regs, id=3537)
  register_write.3539: () = register_write(dmem, register=p0_dmem, id=3539)
  p0_pc: bits[32] = register_read(register=p0_pc, id=3534)
  p0_regs: bits[32][32] = register_read(register=p0_regs, id=3538)
  p0_dmem: bits[8][16] = register_read(register=p0_dmem, id=3540)
  literal.3548: bits[20] = literal(value=0, id=3548, pos=[(0,530,35)])
  literal.3567: bits[7] = literal(value=32, id=3567, pos=[(0,69,22)])
  literal.3568: bits[7] = literal(value=32, id=3568, pos=[(0,69,22)])
  literal.3574: bits[31] = literal(value=1, id=3574, pos=[(0,407,29)])
  literal.3603: bits[32] = literal(value=1, id=3603, pos=[(0,404,56)])
  literal.3606: bits[32] = literal(value=3, id=3606, pos=[(0,408,35)])
  bit_slice.3607: bits[30] = bit_slice(p0_pc, start=2, width=30, id=3607, pos=[(0,418,41)])
  literal.3608: bits[30] = literal(value=1, id=3608, pos=[(0,418,41)])
  literal.3609: bits[1] = literal(value=0, id=3609, pos=[(0,527,35)])
  add.3626: bits[30] = add(bit_slice.3607, literal.3608, id=3626, pos=[(0,418,41)])
  literal.3628: bits[20] = literal(value=0, id=3628, pos=[(0,530,35)])
  literal.3630: bits[13] = literal(value=1, id=3630, pos=[(0,527,35)])
  bit_slice.3633: bits[31] = bit_slice(p0_pc, start=1, width=31, id=3633, pos=[(0,503,18)])
  literal.3663: bits[4] = literal(value=0, id=3663, pos=[(0,530,35)])
  bit_slice.3665: bits[10] = bit_slice(add.3626, start=0, width=10, id=3665, pos=[(0,530,35)])
  bit_slice.3666: bits[2] = bit_slice(p0_pc, start=0, width=2, id=3666, pos=[(0,418,41)])
  literal.3669: bits[19] = literal(value=0, id=3669, pos=[(0,527,35)])
  literal.3672: bits[31] = literal(value=1, id=3672, pos=[(0,407,29)])
  bit_slice.3674: bits[1] = bit_slice(p0_pc, start=0, width=1, id=3674, pos=[(0,503,18)])
  bit_slice.3690: bits[16] = bit_slice(add.3626, start=14, width=16, id=3690, pos=[(0,530,35)])
  bit_slice.3700: bits[4] = bit_slice(add.3626, start=10, width=4, id=3700, pos=[(0,530,35)])
  concat.3712: bits[12] = concat(bit_slice.3665, bit_slice.3666, id=3712, pos=[(0,530,35)])
  literal.3720: bits[13] = literal(value=3, id=3720, pos=[(0,527,35)])
  concat.3725: bits[32] = concat(add.3626, bit_slice.3666, id=3725, pos=[(0,418,41)])
  literal.3746: bits[12] = literal(value=0, id=3746, pos=[(0,480,50)])
  literal.3747: bits[7] = literal(value=35, id=3747, pos=[(0,53,20)])
  literal.3753: bits[19] = literal(value=0, id=3753, pos=[(0,527,35)])
  bit_slice.3791: bits[1] = bit_slice(p0_pc, start=1, width=1, id=3791)
  register_write.3845: () = register_write(p0_regs, register=p1_regs, id=3845)
  p1_regs: bits[32][32] = register_read(register=p1_regs, id=3846)
  p1_concat_3807: bits[5] = register_read(register=p1_concat_3807, id=3848)
  p1_array_update_3808: bits[32][32] = register_read(register=p1_array_update_3808, id=3850, pos=[(0,373,21)])
  p1_array_update_3809: bits[32][32] = register_read(register=p1_array_update_3809, id=3852, pos=[(0,431,13)])
  p1_array_update_3810: bits[32][32] = register_read(register=p1_array_update_3810, id=3854, pos=[(0,480,21)])
  p1_array_update_3811: bits[32][32] = register_read(register=p1_array_update_3811, id=3856, pos=[(0,491,45)])
  p1_concat_3836: bits[32] = register_read(register=p1_concat_3836, id=3858)
  p1_one_hot_sel_3837: bits[8][16] = register_read(register=p1_one_hot_sel_3837, id=3860)
  one_hot_sel.3861: bits[32][32] = one_hot_sel(p1_concat_3807, cases=[p1_array_update_3808, p1_regs, p1_array_update_3809, p1_array_update_3810, p1_array_update_3811], id=3861)
  register_write.3862: () = register_write(one_hot_sel.3861, register=p2_one_hot_sel_3861, id=3862)
  register_write.3864: () = register_write(p1_concat_3836, register=p2_concat_3836, id=3864)
  register_write.3866: () = register_write(p1_one_hot_sel_3837, register=p2_one_hot_sel_3837, id=3866)
  p2_one_hot_sel_3861: bits[32][32] = register_read(register=p2_one_hot_sel_3861, id=3863)
  p2_concat_3836: bits[32] = register_read(register=p2_concat_3836, id=3865)
  p2_one_hot_sel_3837: bits[8][16] = register_read(register=p2_one_hot_sel_3837, id=3867)
  literal.3868: bits[32] = literal(value=0, id=3868, pos=[(0,371,41)])
  literal.3869: bits[32] = literal(value=0, id=3869, pos=[(0,371,41)])
  array_update.3870: bits[32][32] = array_update(p2_one_hot_sel_3861, literal.3868, indices=[literal.3869], id=3870, pos=[(0,536,15)])
  tuple.3871: (bits[32], bits[32][32], bits[8][16]) = tuple(p2_concat_3836, array_update.3870, p2_one_hot_sel_3837, id=3871, pos=[(0,536,4)])
  register_write.3535: () = register_write(ins, register=p0_ins, id=3535)
  register_write.3872: () = register_write(tuple.3871, register=p3_tuple_3871, id=3872, pos=[(0,536,4)])
  p0_ins: bits[32] = register_read(register=p0_ins, id=3536)
  bit_slice.3549: bits[12] = bit_slice(p0_ins, start=20, width=12, id=3549, pos=[(0,172,21)])
  bit_slice.3550: bits[5] = bit_slice(p0_ins, start=15, width=5, id=3550, pos=[(0,173,21)])
  concat.3557: bits[32] = concat(literal.3548, bit_slice.3549, id=3557, pos=[(0,530,35)])
  array_index.3558: bits[32] = array_index(p0_regs, indices=[bit_slice.3550], id=3558, pos=[(0,401,27)])
  add.3564: bits[32] = add(concat.3557, array_index.3558, id=3564, pos=[(0,401,27)])
  bit_slice.3566: bits[7] = bit_slice(p0_ins, start=25, width=7, id=3566, pos=[(0,130,19)])
  bit_slice.3573: bits[31] = bit_slice(add.3564, start=1, width=31, id=3573, pos=[(0,407,29)])
  ne.3581: bits[1] = ne(bit_slice.3566, literal.3567, id=3581, pos=[(0,526,35)])
  eq.3582: bits[1] = eq(bit_slice.3566, literal.3568, id=3582, pos=[(0,526,35)])
  add.3587: bits[31] = add(bit_slice.3573, literal.3574, id=3587, pos=[(0,407,29)])
  bit_slice.3588: bits[1] = bit_slice(add.3564, start=0, width=1, id=3588, pos=[(0,407,29)])
  bit_slice.3589: bits[1] = bit_slice(p0_ins, start=31, width=1, id=3589, pos=[(0,288,21)])
  bit_slice.3590: bits[1] = bit_slice(p0_ins, start=7, width=1, id=3590, pos=[(0,294,21)])
  bit_slice.3591: bits[6] = bit_slice(p0_ins, start=25, width=6, id=3591, pos=[(0,289,21)])
  bit_slice.3592: bits[4] = bit_slice(p0_ins, start=8, width=4, id=3592, pos=[(0,293,21)])
  concat.3601: bits[2] = concat(ne.3581, eq.3582, id=3601, pos=[(0,526,35)])
  concat.3605: bits[32] = concat(add.3587, bit_slice.3588, id=3605, pos=[(0,407,29)])
  bit_slice.3610: bits[5] = bit_slice(p0_ins, start=7, width=5, id=3610, pos=[(0,175,21)])
  bit_slice.3611: bits[5] = bit_slice(p0_ins, start=20, width=5, id=3611, pos=[(0,131,19)])
  concat.3612: bits[12] = concat(bit_slice.3589, bit_slice.3590, bit_slice.3591, bit_slice.3592, id=3612, pos=[(0,503,18)])
  array_index.3619: bits[8] = array_index(p0_dmem, indices=[add.3564], id=3619, pos=[(0,404,30)])
  add.3620: bits[32] = add(add.3564, literal.3603, id=3620, pos=[(0,401,33)])
  array_index.3623: bits[8] = array_index(p0_dmem, indices=[concat.3605], id=3623, pos=[(0,407,23)])
  add.3624: bits[32] = add(add.3564, literal.3606, id=3624, pos=[(0,401,33)])
  array_index.3625: bits[32] = array_index(p0_regs, indices=[add.3564], id=3625, pos=[(0,410,28)])
  concat.3629: bits[13] = concat(literal.3609, bit_slice.3566, bit_slice.3610, id=3629, pos=[(0,527,35)])
  array_index.3631: bits[32] = array_index(p0_regs, indices=[bit_slice.3611], id=3631, pos=[(0,448,35)])
  sign_ext.3632: bits[31] = sign_ext(concat.3612, new_bit_count=31, id=3632, pos=[(0,503,18)])
  bit_slice.3634: bits[8] = bit_slice(p0_ins, start=12, width=8, id=3634, pos=[(0,325,22)])
  bit_slice.3635: bits[1] = bit_slice(p0_ins, start=20, width=1, id=3635, pos=[(0,324,22)])
  bit_slice.3636: bits[10] = bit_slice(p0_ins, start=21, width=10, id=3636, pos=[(0,323,22)])
  shll.3647: bits[32] = shll(array_index.3558, bit_slice.3549, id=3647, pos=[(0,172,21)])
  xor.3648: bits[32] = xor(array_index.3558, concat.3557, id=3648, pos=[(0,390,29)])
  shra.3649: bits[32] = shra(array_index.3558, bit_slice.3549, id=3649, pos=[(0,392,39)])
  or.3650: bits[32] = or(array_index.3558, concat.3557, id=3650, pos=[(0,393,29)])
  sign_ext.3651: bits[32] = sign_ext(array_index.3619, new_bit_count=32, id=3651, pos=[(0,403,25)])
  bit_slice.3652: bits[1] = bit_slice(array_index.3619, start=7, width=1, id=3652, pos=[(0,530,35)])
  array_index.3653: bits[8] = array_index(p0_dmem, indices=[add.3620], id=3653, pos=[(0,404,44)])
  bit_slice.3659: bits[12] = bit_slice(array_index.3558, start=0, width=12, id=3659, pos=[(0,401,27)])
  bit_slice.3660: bits[4] = bit_slice(array_index.3619, start=0, width=4, id=3660, pos=[(0,530,35)])
  bit_slice.3661: bits[4] = bit_slice(array_index.3623, start=0, width=4, id=3661, pos=[(0,530,35)])
  array_index.3662: bits[8] = array_index(p0_dmem, indices=[add.3624], id=3662, pos=[(0,408,23)])
  array_index.3664: bits[8] = array_index(p0_dmem, indices=[array_index.3625], id=3664, pos=[(0,410,23)])
  concat.3668: bits[32] = concat(literal.3628, bit_slice.3566, bit_slice.3610, id=3668, pos=[(0,527,35)])
  add.3670: bits[13] = add(concat.3629, literal.3630, id=3670, pos=[(0,527,35)])
  bit_slice.3671: bits[31] = bit_slice(array_index.3631, start=1, width=31, id=3671, pos=[(0,452,47)])
  add.3673: bits[31] = add(sign_ext.3632, bit_slice.3633, id=3673, pos=[(0,503,18)])
  concat.3675: bits[20] = concat(bit_slice.3589, bit_slice.3634, bit_slice.3635, bit_slice.3636, id=3675, pos=[(0,491,7)])
  bit_slice.3682: bits[16] = bit_slice(add.3564, start=16, width=16, id=3682, pos=[(0,530,35)])
  bit_slice.3683: bits[16] = bit_slice(shll.3647, start=16, width=16, id=3683, pos=[(0,530,35)])
  bit_slice.3684: bits[16] = bit_slice(xor.3648, start=16, width=16, id=3684, pos=[(0,530,35)])
  bit_slice.3685: bits[16] = bit_slice(shra.3649, start=16, width=16, id=3685, pos=[(0,530,35)])
  bit_slice.3686: bits[16] = bit_slice(or.3650, start=16, width=16, id=3686, pos=[(0,530,35)])
  bit_slice.3687: bits[16] = bit_slice(sign_ext.3651, start=16, width=16, id=3687, pos=[(0,530,35)])
  sign_ext.3688: bits[16] = sign_ext(bit_slice.3652, new_bit_count=16, id=3688, pos=[(0,530,35)])
  concat.3689: bits[16] = concat(array_index.3619, array_index.3653, id=3689, pos=[(0,530,35)])
  bit_slice.3692: bits[4] = bit_slice(add.3564, start=12, width=4, id=3692, pos=[(0,530,35)])
  bit_slice.3693: bits[4] = bit_slice(shll.3647, start=12, width=4, id=3693, pos=[(0,530,35)])
  bit_slice.3694: bits[4] = bit_slice(xor.3648, start=12, width=4, id=3694, pos=[(0,530,35)])
  bit_slice.3695: bits[4] = bit_slice(shra.3649, start=12, width=4, id=3695, pos=[(0,530,35)])
  bit_slice.3696: bits[4] = bit_slice(or.3650, start=12, width=4, id=3696, pos=[(0,530,35)])
  bit_slice.3697: bits[4] = bit_slice(sign_ext.3651, start=12, width=4, id=3697, pos=[(0,530,35)])
  bit_slice.3698: bits[4] = bit_slice(array_index.3619, start=4, width=4, id=3698, pos=[(0,530,35)])
  bit_slice.3699: bits[4] = bit_slice(array_index.3623, start=4, width=4, id=3699, pos=[(0,530,35)])
  bit_slice.3702: bits[12] = bit_slice(add.3564, start=0, width=12, id=3702, pos=[(0,530,35)])
  bit_slice.3703: bits[12] = bit_slice(shll.3647, start=0, width=12, id=3703, pos=[(0,530,35)])
  bit_slice.3704: bits[12] = bit_slice(xor.3648, start=0, width=12, id=3704, pos=[(0,530,35)])
  bit_slice.3705: bits[12] = bit_slice(shra.3649, start=0, width=12, id=3705, pos=[(0,530,35)])
  bit_slice.3706: bits[12] = bit_slice(or.3650, start=0, width=12, id=3706, pos=[(0,530,35)])
  and.3707: bits[12] = and(bit_slice.3659, bit_slice.3549, id=3707, pos=[(0,394,29)])
  bit_slice.3708: bits[12] = bit_slice(sign_ext.3651, start=0, width=12, id=3708, pos=[(0,530,35)])
  concat.3709: bits[12] = concat(bit_slice.3660, array_index.3653, id=3709, pos=[(0,530,35)])
  concat.3710: bits[12] = concat(bit_slice.3661, array_index.3662, id=3710, pos=[(0,530,35)])
  concat.3711: bits[12] = concat(literal.3663, array_index.3664, id=3711, pos=[(0,530,35)])
  bit_slice.3715: bits[8] = bit_slice(array_index.3558, start=24, width=8, id=3715, pos=[(0,449,40)])
  add.3716: bits[32] = add(concat.3668, array_index.3631, id=3716, pos=[(0,448,35)])
  concat.3717: bits[32] = concat(literal.3669, add.3670, id=3717, pos=[(0,527,35)])
  add.3718: bits[31] = add(bit_slice.3671, literal.3672, id=3718, pos=[(0,452,47)])
  bit_slice.3719: bits[1] = bit_slice(array_index.3631, start=0, width=1, id=3719, pos=[(0,452,47)])
  sign_ext.3723: bits[32] = sign_ext(bit_slice.3549, new_bit_count=32, id=3723, pos=[(0,420,46)])
  eq.3724: bits[1] = eq(array_index.3558, array_index.3631, id=3724, pos=[(0,505,35)])
  concat.3726: bits[32] = concat(add.3673, bit_slice.3674, id=3726, pos=[(0,503,18)])
  ne.3727: bits[1] = ne(array_index.3558, array_index.3631, id=3727, pos=[(0,506,35)])
  slt.3728: bits[1] = slt(array_index.3558, array_index.3631, id=3728, pos=[(0,507,35)])
  sge.3729: bits[1] = sge(array_index.3558, array_index.3631, id=3729, pos=[(0,508,35)])
  ult.3730: bits[1] = ult(array_index.3558, array_index.3631, id=3730, pos=[(0,509,26)])
  uge.3731: bits[1] = uge(array_index.3558, array_index.3631, id=3731, pos=[(0,510,26)])
  sign_ext.3732: bits[31] = sign_ext(concat.3675, new_bit_count=31, id=3732, pos=[(0,491,7)])
  xor.3735: bits[32] = xor(array_index.3558, array_index.3631, id=3735, pos=[(0,352,23)])
  and.3736: bits[32] = and(array_index.3558, array_index.3631, id=3736, pos=[(0,353,23)])
  or.3737: bits[32] = or(array_index.3558, array_index.3631, id=3737, pos=[(0,354,23)])
  shll.3738: bits[32] = shll(array_index.3558, array_index.3631, id=3738, pos=[(0,448,35)])
  sub.3739: bits[32] = sub(array_index.3558, array_index.3631, id=3739, pos=[(0,448,35)])
  add.3740: bits[32] = add(array_index.3631, array_index.3558, id=3740, pos=[(0,401,27)])
  shra.3741: bits[32] = shra(array_index.3558, array_index.3631, id=3741, pos=[(0,367,42)])
  bit_slice.3745: bits[20] = bit_slice(p0_ins, start=12, width=20, id=3745, pos=[(0,251,22)])
  array_update.3749: bits[8][16] = array_update(p0_dmem, bit_slice.3715, indices=[add.3716], id=3749, pos=[(0,448,24)])
  bit_slice.3750: bits[8] = bit_slice(array_index.3558, start=16, width=8, id=3750, pos=[(0,451,40)])
  add.3751: bits[32] = add(concat.3717, array_index.3631, id=3751, pos=[(0,448,35)])
  concat.3752: bits[32] = concat(add.3718, bit_slice.3719, id=3752, pos=[(0,452,47)])
  add.3754: bits[13] = add(concat.3629, literal.3720, id=3754, pos=[(0,527,35)])
  add.3759: bits[32] = add(sign_ext.3723, array_index.3558, id=3759, pos=[(0,401,27)])
  sel.3760: bits[32] = sel(eq.3724, cases=[concat.3725, concat.3726], id=3760, pos=[(0,505,13)])
  sel.3761: bits[32] = sel(ne.3727, cases=[concat.3725, concat.3726], id=3761, pos=[(0,506,13)])
  sel.3762: bits[32] = sel(slt.3728, cases=[concat.3725, concat.3726], id=3762, pos=[(0,507,13)])
  sel.3763: bits[32] = sel(sge.3729, cases=[concat.3725, concat.3726], id=3763, pos=[(0,508,13)])
  sel.3764: bits[32] = sel(ult.3730, cases=[concat.3725, concat.3726], id=3764, pos=[(0,509,13)])
  sel.3765: bits[32] = sel(uge.3731, cases=[concat.3725, concat.3726], id=3765, pos=[(0,510,13)])
  add.3766: bits[31] = add(sign_ext.3732, bit_slice.3633, id=3766, pos=[(0,503,18)])
  concat.3771: bits[32] = concat(bit_slice.3745, literal.3746, id=3771, pos=[(0,480,50)])
  array_update.3774: bits[8][16] = array_update(array_update.3749, bit_slice.3750, indices=[add.3751], id=3774, pos=[(0,450,30)])
  bit_slice.3775: bits[8] = bit_slice(array_index.3558, start=8, width=8, id=3775, pos=[(0,453,40)])
  add.3776: bits[32] = add(concat.3668, concat.3752, id=3776, pos=[(0,452,47)])
  concat.3777: bits[32] = concat(literal.3753, add.3754, id=3777, pos=[(0,527,35)])
  bit_slice.3782: bits[30] = bit_slice(add.3759, start=2, width=30, id=3782)
  bit_slice.3783: bits[30] = bit_slice(sel.3760, start=2, width=30, id=3783)
  bit_slice.3784: bits[30] = bit_slice(sel.3761, start=2, width=30, id=3784)
  bit_slice.3785: bits[30] = bit_slice(sel.3762, start=2, width=30, id=3785)
  bit_slice.3786: bits[30] = bit_slice(sel.3763, start=2, width=30, id=3786)
  bit_slice.3787: bits[30] = bit_slice(sel.3764, start=2, width=30, id=3787)
  bit_slice.3788: bits[30] = bit_slice(sel.3765, start=2, width=30, id=3788)
  bit_slice.3789: bits[30] = bit_slice(add.3766, start=1, width=30, id=3789)
  bit_slice.3792: bits[1] = bit_slice(add.3759, start=1, width=1, id=3792)
  bit_slice.3793: bits[1] = bit_slice(sel.3760, start=1, width=1, id=3793)
  bit_slice.3794: bits[1] = bit_slice(sel.3761, start=1, width=1, id=3794)
  bit_slice.3795: bits[1] = bit_slice(sel.3762, start=1, width=1, id=3795)
  bit_slice.3796: bits[1] = bit_slice(sel.3763, start=1, width=1, id=3796)
  bit_slice.3797: bits[1] = bit_slice(sel.3764, start=1, width=1, id=3797)
  bit_slice.3798: bits[1] = bit_slice(sel.3765, start=1, width=1, id=3798)
  bit_slice.3799: bits[1] = bit_slice(add.3766, start=0, width=1, id=3799)
  bit_slice.3801: bits[1] = bit_slice(sel.3760, start=0, width=1, id=3801)
  bit_slice.3802: bits[1] = bit_slice(sel.3761, start=0, width=1, id=3802)
  bit_slice.3803: bits[1] = bit_slice(sel.3762, start=0, width=1, id=3803)
  bit_slice.3804: bits[1] = bit_slice(sel.3763, start=0, width=1, id=3804)
  bit_slice.3805: bits[1] = bit_slice(sel.3764, start=0, width=1, id=3805)
  bit_slice.3806: bits[1] = bit_slice(sel.3765, start=0, width=1, id=3806)
  array_update.3810: bits[32][32] = array_update(p0_regs, concat.3771, indices=[bit_slice.3610], id=3810, pos=[(0,480,21)])
  array_update.3811: bits[32][32] = array_update(p0_regs, concat.3725, indices=[bit_slice.3610], id=3811, pos=[(0,491,45)])
  array_update.3814: bits[8][16] = array_update(array_update.3774, bit_slice.3775, indices=[add.3776], id=3814, pos=[(0,452,30)])
  bit_slice.3815: bits[8] = bit_slice(array_index.3558, start=0, width=8, id=3815, pos=[(0,455,40)])
  add.3816: bits[32] = add(concat.3777, array_index.3631, id=3816, pos=[(0,448,35)])
  array_update.3817: bits[8][16] = array_update(p0_dmem, bit_slice.3775, indices=[add.3716], id=3817, pos=[(0,458,26)])
  array_update.3826: bits[8][16] = array_update(array_update.3814, bit_slice.3815, indices=[add.3816], id=3826, pos=[(0,454,30)])
  array_update.3827: bits[8][16] = array_update(array_update.3817, bit_slice.3815, indices=[add.3751], id=3827, pos=[(0,460,30)])
  array_update.3828: bits[8][16] = array_update(p0_dmem, bit_slice.3815, indices=[add.3716], id=3828, pos=[(0,463,31)])
  register_write.3853: () = register_write(array_update.3810, register=p1_array_update_3810, id=3853, pos=[(0,480,21)])
  register_write.3855: () = register_write(array_update.3811, register=p1_array_update_3811, id=3855, pos=[(0,491,45)])
  p3_tuple_3871: (bits[32], bits[32][32], bits[8][16]) = register_read(register=p3_tuple_3871, id=3873, pos=[(0,536,4)])
  bit_slice.3541: bits[3] = bit_slice(p0_ins, start=12, width=3, id=3541, pos=[(0,174,21)])
  literal.3542: bits[3] = literal(value=7, id=3542, pos=[(0,91,16)])
  literal.3543: bits[3] = literal(value=6, id=3543, pos=[(0,90,16)])
  literal.3544: bits[3] = literal(value=5, id=3544, pos=[(0,88,16)])
  literal.3545: bits[3] = literal(value=4, id=3545, pos=[(0,87,16)])
  literal.3546: bits[3] = literal(value=1, id=3546, pos=[(0,86,16)])
  literal.3547: bits[3] = literal(value=0, id=3547, pos=[(0,85,16)])
  eq.3551: bits[1] = eq(bit_slice.3541, literal.3542, id=3551, pos=[(0,530,35)])
  eq.3552: bits[1] = eq(bit_slice.3541, literal.3543, id=3552, pos=[(0,530,35)])
  eq.3553: bits[1] = eq(bit_slice.3541, literal.3544, id=3553, pos=[(0,530,35)])
  sign_ext.3600: bits[2] = sign_ext(eq.3553, new_bit_count=2, id=3600, pos=[(0,526,35)])
  and.3616: bits[2] = and(sign_ext.3600, concat.3601, id=3616, pos=[(0,526,35)])
  bit_slice.3640: bits[1] = bit_slice(and.3616, start=1, width=1, id=3640, pos=[(0,526,35)])
  bit_slice.3678: bits[1] = bit_slice(and.3616, start=0, width=1, id=3678, pos=[(0,526,35)])
  eq.3554: bits[1] = eq(bit_slice.3541, literal.3545, id=3554, pos=[(0,530,35)])
  eq.3555: bits[1] = eq(bit_slice.3541, literal.3546, id=3555, pos=[(0,530,35)])
  or.3680: bits[1] = or(eq.3555, bit_slice.3640, id=3680, pos=[(0,526,35)])
  eq.3556: bits[1] = eq(bit_slice.3541, literal.3547, id=3556, pos=[(0,530,35)])
  concat.3561: bits[7] = concat(eq.3551, eq.3552, eq.3553, eq.3553, eq.3554, eq.3555, eq.3556, id=3561, pos=[(0,530,35)])
  one_hot.3570: bits[8] = one_hot(concat.3561, lsb_prio=true, id=3570, pos=[(0,530,35)])
  bit_slice.3584: bits[7] = bit_slice(one_hot.3570, start=0, width=7, id=3584, pos=[(0,530,35)])
  sign_ext.3639: bits[2] = sign_ext(eq.3556, new_bit_count=2, id=3639, pos=[(0,526,35)])
  and.3679: bits[2] = and(sign_ext.3639, concat.3601, id=3679, pos=[(0,526,35)])
  concat.3722: bits[6] = concat(eq.3551, eq.3552, eq.3553, eq.3554, eq.3555, eq.3556, id=3722, pos=[(0,531,35)])
  concat.3734: bits[7] = concat(bit_slice.3678, and.3679, or.3680, eq.3552, eq.3551, eq.3554, id=3734, pos=[(0,526,35)])
  one_hot_sel.3769: bits[32] = one_hot_sel(concat.3734, cases=[xor.3735, and.3736, or.3737, shll.3738, sub.3739, add.3740, shra.3741], id=3769, pos=[(0,526,35)])
  array_update.3808: bits[32][32] = array_update(p0_regs, one_hot_sel.3769, indices=[bit_slice.3610], id=3808, pos=[(0,373,21)])
  register_write.3849: () = register_write(array_update.3808, register=p1_array_update_3808, id=3849, pos=[(0,373,21)])
  bit_slice.3559: bits[7] = bit_slice(p0_ins, start=0, width=7, id=3559, pos=[(0,176,21)])
  ne.3772: bits[1] = ne(bit_slice.3559, literal.3747, id=3772)
  literal.3560: bits[7] = literal(value=19, id=3560, pos=[(0,50,20)])
  literal.3562: bits[7] = literal(value=3, id=3562, pos=[(0,49,20)])
  literal.3563: bits[3] = literal(value=2, id=3563, pos=[(0,80,16)])
  literal.3565: bits[7] = literal(value=103, id=3565, pos=[(0,51,20)])
  eq.3569: bits[1] = eq(bit_slice.3559, literal.3560, id=3569, pos=[(0,530,35)])
  sign_ext.3583: bits[7] = sign_ext(eq.3569, new_bit_count=7, id=3583, pos=[(0,530,35)])
  and.3602: bits[7] = and(sign_ext.3583, bit_slice.3584, id=3602, pos=[(0,530,35)])
  bit_slice.3617: bits[1] = bit_slice(and.3602, start=1, width=1, id=3617, pos=[(0,530,35)])
  bit_slice.3618: bits[1] = bit_slice(and.3602, start=3, width=1, id=3618, pos=[(0,530,35)])
  bit_slice.3643: bits[2] = bit_slice(and.3602, start=4, width=2, id=3643, pos=[(0,530,35)])
  bit_slice.3644: bits[1] = bit_slice(and.3602, start=2, width=1, id=3644, pos=[(0,530,35)])
  or.3645: bits[1] = or(bit_slice.3617, bit_slice.3618, id=3645, pos=[(0,530,35)])
  bit_slice.3646: bits[1] = bit_slice(and.3602, start=0, width=1, id=3646, pos=[(0,530,35)])
  bit_slice.3658: bits[3] = bit_slice(and.3602, start=4, width=3, id=3658, pos=[(0,530,35)])
  eq.3571: bits[1] = eq(bit_slice.3559, literal.3562, id=3571, pos=[(0,530,35)])
  sign_ext.3585: bits[5] = sign_ext(eq.3571, new_bit_count=5, id=3585, pos=[(0,530,35)])
  eq.3572: bits[1] = eq(bit_slice.3541, literal.3563, id=3572, pos=[(0,530,35)])
  concat.3586: bits[5] = concat(eq.3553, eq.3554, eq.3572, eq.3555, eq.3556, id=3586, pos=[(0,530,35)])
  and.3604: bits[5] = and(sign_ext.3585, concat.3586, id=3604, pos=[(0,530,35)])
  bit_slice.3621: bits[1] = bit_slice(and.3604, start=1, width=1, id=3621, pos=[(0,530,35)])
  bit_slice.3622: bits[1] = bit_slice(and.3604, start=4, width=1, id=3622, pos=[(0,530,35)])
  bit_slice.3642: bits[3] = bit_slice(and.3604, start=0, width=3, id=3642, pos=[(0,530,35)])
  bit_slice.3654: bits[1] = bit_slice(and.3604, start=2, width=1, id=3654, pos=[(0,530,35)])
  or.3655: bits[1] = or(bit_slice.3621, bit_slice.3622, id=3655, pos=[(0,530,35)])
  bit_slice.3656: bits[1] = bit_slice(and.3604, start=0, width=1, id=3656, pos=[(0,530,35)])
  bit_slice.3657: bits[2] = bit_slice(and.3604, start=2, width=2, id=3657, pos=[(0,530,35)])
  literal.3575: bits[7] = literal(value=51, id=3575, pos=[(0,52,20)])
  literal.3576: bits[7] = literal(value=35, id=3576, pos=[(0,53,20)])
  eq.3577: bits[1] = eq(bit_slice.3559, literal.3565, id=3577, pos=[(0,530,35)])
  and.3641: bits[1] = and(eq.3577, eq.3556, id=3641, pos=[(0,530,35)])
  concat.3681: bits[9] = concat(and.3641, bit_slice.3642, bit_slice.3643, bit_slice.3644, or.3645, bit_slice.3646, id=3681, pos=[(0,530,35)])
  concat.3691: bits[9] = concat(and.3641, bit_slice.3654, or.3655, bit_slice.3656, bit_slice.3643, bit_slice.3644, or.3645, bit_slice.3646, id=3691, pos=[(0,530,35)])
  concat.3701: bits[11] = concat(and.3641, bit_slice.3657, or.3655, bit_slice.3656, bit_slice.3658, bit_slice.3644, or.3645, bit_slice.3646, id=3701, pos=[(0,530,35)])
  one_hot_sel.3742: bits[16] = one_hot_sel(concat.3681, cases=[bit_slice.3682, bit_slice.3683, bit_slice.3684, bit_slice.3685, bit_slice.3686, bit_slice.3687, sign_ext.3688, concat.3689, bit_slice.3690], id=3742, pos=[(0,530,35)])
  one_hot_sel.3743: bits[4] = one_hot_sel(concat.3691, cases=[bit_slice.3692, bit_slice.3693, bit_slice.3694, bit_slice.3695, bit_slice.3696, bit_slice.3697, bit_slice.3698, bit_slice.3699, bit_slice.3700], id=3743, pos=[(0,530,35)])
  one_hot_sel.3744: bits[12] = one_hot_sel(concat.3701, cases=[bit_slice.3702, bit_slice.3703, bit_slice.3704, bit_slice.3705, bit_slice.3706, and.3707, bit_slice.3708, concat.3709, concat.3710, concat.3711, concat.3712], id=3744, pos=[(0,530,35)])
  concat.3770: bits[32] = concat(one_hot_sel.3742, one_hot_sel.3743, one_hot_sel.3744, id=3770, pos=[(0,530,35)])
  array_update.3809: bits[32][32] = array_update(p0_regs, concat.3770, indices=[bit_slice.3610], id=3809, pos=[(0,431,13)])
  register_write.3851: () = register_write(array_update.3809, register=p1_array_update_3809, id=3851, pos=[(0,431,13)])
  literal.3578: bits[7] = literal(value=99, id=3578, pos=[(0,54,20)])
  literal.3579: bits[7] = literal(value=55, id=3579, pos=[(0,55,20)])
  literal.3580: bits[7] = literal(value=111, id=3580, pos=[(0,56,20)])
  literal.3593: bits[3] = literal(value=0, id=3593, pos=[(0,85,16)])
  eq.3594: bits[1] = eq(bit_slice.3559, literal.3575, id=3594)
  eq.3595: bits[1] = eq(bit_slice.3559, literal.3576, id=3595)
  sign_ext.3713: bits[4] = sign_ext(eq.3595, new_bit_count=4, id=3713)
  or.3596: bits[1] = or(eq.3569, eq.3577, eq.3571, id=3596, pos=[(0,528,6)])
  eq.3597: bits[1] = eq(bit_slice.3559, literal.3578, id=3597)
  sign_ext.3721: bits[6] = sign_ext(eq.3597, new_bit_count=6, id=3721)
  and.3758: bits[6] = and(sign_ext.3721, concat.3722, id=3758)
  eq.3598: bits[1] = eq(bit_slice.3559, literal.3579, id=3598)
  or.3676: bits[1] = or(eq.3594, eq.3595, eq.3598, eq.3569, eq.3571, id=3676)
  eq.3599: bits[1] = eq(bit_slice.3559, literal.3580, id=3599)
  nor.3613: bits[1] = nor(eq.3569, eq.3571, id=3613, pos=[(0,530,35)])
  ne.3614: bits[1] = ne(bit_slice.3541, literal.3593, id=3614, pos=[(0,530,35)])
  or.3615: bits[1] = or(eq.3594, eq.3595, or.3596, eq.3597, eq.3598, eq.3599, id=3615)
  not.3638: bits[1] = not(or.3615, id=3638)
  or.3768: bits[1] = or(eq.3595, eq.3597, not.3638, id=3768)
  concat.3807: bits[5] = concat(eq.3599, eq.3598, or.3596, or.3768, eq.3594, id=3807)
  register_write.3847: () = register_write(concat.3807, register=p1_concat_3807, id=3847)
  literal.3627: bits[3] = literal(value=2, id=3627, pos=[(0,80,16)])
  and.3637: bits[1] = and(or.3596, nor.3613, eq.3577, ne.3614, id=3637, pos=[(0,530,35)])
  or.3677: bits[1] = or(and.3637, not.3638, id=3677)
  or.3733: bits[1] = or(or.3676, or.3677, id=3733)
  or.3767: bits[1] = or(or.3733, eq.3599, id=3767)
  concat.3781: bits[10] = concat(eq.3599, and.3758, or.3677, and.3641, or.3676, id=3781)
  concat.3790: bits[9] = concat(eq.3599, and.3758, and.3641, or.3733, id=3790)
  concat.3800: bits[7] = concat(and.3758, or.3767, id=3800)
  one_hot_sel.3822: bits[30] = one_hot_sel(concat.3781, cases=[add.3626, bit_slice.3782, bit_slice.3607, bit_slice.3783, bit_slice.3784, bit_slice.3785, bit_slice.3786, bit_slice.3787, bit_slice.3788, bit_slice.3789], id=3822)
  one_hot_sel.3823: bits[1] = one_hot_sel(concat.3790, cases=[bit_slice.3791, bit_slice.3792, bit_slice.3793, bit_slice.3794, bit_slice.3795, bit_slice.3796, bit_slice.3797, bit_slice.3798, bit_slice.3799], id=3823)
  one_hot_sel.3824: bits[1] = one_hot_sel(concat.3800, cases=[bit_slice.3674, bit_slice.3801, bit_slice.3802, bit_slice.3803, bit_slice.3804, bit_slice.3805, bit_slice.3806], id=3824)
  concat.3836: bits[32] = concat(one_hot_sel.3822, one_hot_sel.3823, one_hot_sel.3824, id=3836)
  register_write.3857: () = register_write(concat.3836, register=p1_concat_3836, id=3857)
  ugt.3667: bits[1] = ugt(bit_slice.3541, literal.3627, id=3667, pos=[(0,527,35)])
  concat.3714: bits[4] = concat(ugt.3667, eq.3556, eq.3555, eq.3572, id=3714, pos=[(0,527,35)])
  and.3748: bits[4] = and(sign_ext.3713, concat.3714, id=3748)
  bit_slice.3773: bits[1] = bit_slice(and.3748, start=3, width=1, id=3773)
  bit_slice.3812: bits[3] = bit_slice(and.3748, start=0, width=3, id=3812)
  or.3813: bits[1] = or(ne.3772, bit_slice.3773, id=3813)
  concat.3825: bits[4] = concat(bit_slice.3812, or.3813, id=3825)
  one_hot_sel.3837: bits[8][16] = one_hot_sel(concat.3825, cases=[p0_dmem, array_update.3826, array_update.3827, array_update.3828], id=3837)
  register_write.3859: () = register_write(one_hot_sel.3837, register=p1_one_hot_sel_3837, id=3859)
  or.3755: bits[1] = or(eq.3554, eq.3551, eq.3552, eq.3555, eq.3556, eq.3553, id=3755, pos=[(0,526,35)])
  literal.3756: bits[7] = literal(value=19, id=3756, pos=[(0,50,20)])
  or.3757: bits[1] = or(eq.3556, eq.3555, eq.3572, eq.3554, eq.3553, id=3757, pos=[(0,530,35)])
  not.3778: bits[1] = not(or.3755, id=3778, pos=[(0,526,35)])
  ne.3779: bits[1] = ne(bit_slice.3559, literal.3756, id=3779, pos=[(0,530,35)])
  not.3780: bits[1] = not(or.3757, id=3780, pos=[(0,530,35)])
  and.3818: bits[1] = and(eq.3594, not.3778, id=3818, pos=[(0,526,35)])
  and.3819: bits[1] = and(or.3596, eq.3569, not.3778, id=3819, pos=[(0,530,35)])
  and.3820: bits[1] = and(or.3596, ne.3779, eq.3571, not.3780, id=3820, pos=[(0,530,35)])
  and.3821: bits[1] = and(eq.3597, not.3778, id=3821, pos=[(0,531,35)])
  after_all.3829: token = after_all(id=3829)
  not.3830: bits[1] = not(and.3818, id=3830, pos=[(0,526,35)])
  nand.3831: bits[1] = nand(eq.3595, ugt.3667, id=3831, pos=[(0,527,35)])
  not.3832: bits[1] = not(and.3819, id=3832, pos=[(0,530,35)])
  not.3833: bits[1] = not(and.3820, id=3833, pos=[(0,530,35)])
  not.3834: bits[1] = not(and.3637, id=3834, pos=[(0,530,35)])
  not.3835: bits[1] = not(and.3821, id=3835, pos=[(0,531,35)])
  assert.3838: token = assert(after_all.3829, or.3615, message="Assertion failure via fail! @ xls/examples/riscv_simple.x:535:17-535:56", label="__riscv_simple__run_instruction_13___itok__riscv_simple__run_instruction_unsupported_func3", id=3838)
  assert.3839: token = assert(after_all.3829, not.3830, message="Assertion failure via fail! @ xls/examples/riscv_simple.x:372:18-372:44", label="unmatched_func3", id=3839, pos=[(0,526,35)])
  assert.3840: token = assert(after_all.3829, nand.3831, message="Assertion failure via fail! @ xls/examples/riscv_simple.x:468:21-468:49", label="unsupported_funct3", id=3840, pos=[(0,527,35)])
  assert.3841: token = assert(after_all.3829, not.3832, message="Assertion failure via fail! @ xls/examples/riscv_simple.x:396:25-396:59", label="unmatched_I_ARITH_func3", id=3841, pos=[(0,530,35)])
  assert.3842: token = assert(after_all.3829, not.3833, message="Assertion failure via fail! @ xls/examples/riscv_simple.x:413:25-413:56", label="unmatched_I_LD_func3", id=3842, pos=[(0,530,35)])
  assert.3843: token = assert(after_all.3829, not.3834, message="Assertion failure via fail! @ xls/examples/riscv_simple.x:423:26-423:66", label="unmatched_I_JALR_funct3", id=3843, pos=[(0,530,35)])
  assert.3844: token = assert(after_all.3829, not.3835, message="Assertion failure via fail! @ xls/examples/riscv_simple.x:512:19-512:47", label="__riscv_simple__run_instruction_13___itok__riscv_simple__run_instruction___itok__riscv_simple__run_instruction_10___itok__riscv_simple__run_b_instruction_unsupported_func3", id=3844, pos=[(0,531,35)])
  out: () = output_port(p3_tuple_3871, name=out, id=3874)
}
