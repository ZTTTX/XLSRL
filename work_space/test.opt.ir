package my_package

file_number 1 "././work_space/test.cc"

top fn matrix_multiply(a: bits[32][2][2], b: bits[32][2][2], result: bits[32][2][2]) -> (bits[32][2][2], bits[32][2][2], bits[32][2][2]) {
  literal.1249: bits[1] = literal(value=0, id=1249, pos=[(1,10,7)])
  literal.1388: bits[1] = literal(value=0, id=1388, pos=[(1,10,7)])
  literal.1389: bits[1] = literal(value=0, id=1389, pos=[(1,10,7)])
  literal.1390: bits[1] = literal(value=0, id=1390, pos=[(1,10,7)])
  literal.1392: bits[1] = literal(value=0, id=1392, pos=[(1,10,7)])
  literal.1381: bits[1] = literal(value=1, id=1381, pos=[(1,10,7)])
  literal.1382: bits[1] = literal(value=1, id=1382, pos=[(1,10,7)])
  literal.1393: bits[1] = literal(value=0, id=1393, pos=[(1,10,7)])
  literal.1394: bits[1] = literal(value=0, id=1394, pos=[(1,10,7)])
  literal.1385: bits[1] = literal(value=1, id=1385, pos=[(1,10,7)])
  literal.1386: bits[1] = literal(value=1, id=1386, pos=[(1,10,7)])
  literal.1387: bits[1] = literal(value=1, id=1387, pos=[(1,10,7)])
  literal.1245: bits[1] = literal(value=1, id=1245, pos=[(1,10,7)])
  literal.1391: bits[1] = literal(value=0, id=1391, pos=[(1,10,7)])
  literal.1383: bits[1] = literal(value=1, id=1383, pos=[(1,10,7)])
  literal.1384: bits[1] = literal(value=1, id=1384, pos=[(1,10,7)])
  array_index.1253: bits[32] = array_index(a, indices=[literal.1249, literal.1388], id=1253, pos=[(1,21,9)])
  array_index.1256: bits[32] = array_index(b, indices=[literal.1389, literal.1390], id=1256, pos=[(1,21,9)])
  array_index.1279: bits[32] = array_index(a, indices=[literal.1392, literal.1381], id=1279, pos=[(1,21,9)])
  array_index.1282: bits[32] = array_index(b, indices=[literal.1382, literal.1393], id=1282, pos=[(1,21,9)])
  array_index.1302: bits[32] = array_index(b, indices=[literal.1394, literal.1385], id=1302, pos=[(1,21,9)])
  array_index.1322: bits[32] = array_index(b, indices=[literal.1386, literal.1387], id=1322, pos=[(1,21,9)])
  array_index.1259: bits[32] = array_index(a, indices=[literal.1245, literal.1391], id=1259, pos=[(1,21,9)])
  array_index.1285: bits[32] = array_index(a, indices=[literal.1383, literal.1384], id=1285, pos=[(1,21,9)])
  smul.211: bits[32] = smul(array_index.1253, array_index.1256, id=211, pos=[(1,21,9)])
  smul.253: bits[32] = smul(array_index.1279, array_index.1282, id=253, pos=[(1,21,9)])
  smul.320: bits[32] = smul(array_index.1253, array_index.1302, id=320, pos=[(1,21,9)])
  smul.363: bits[32] = smul(array_index.1279, array_index.1322, id=363, pos=[(1,21,9)])
  smul.457: bits[32] = smul(array_index.1259, array_index.1256, id=457, pos=[(1,21,9)])
  smul.503: bits[32] = smul(array_index.1285, array_index.1282, id=503, pos=[(1,21,9)])
  smul.570: bits[32] = smul(array_index.1259, array_index.1302, id=570, pos=[(1,21,9)])
  smul.613: bits[32] = smul(array_index.1285, array_index.1322, id=613, pos=[(1,21,9)])
  add.257: bits[32] = add(smul.211, smul.253, id=257, pos=[(1,21,9)])
  add.367: bits[32] = add(smul.320, smul.363, id=367, pos=[(1,21,9)])
  add.507: bits[32] = add(smul.457, smul.503, id=507, pos=[(1,21,9)])
  add.617: bits[32] = add(smul.570, smul.613, id=617, pos=[(1,21,9)])
  array.1218: bits[32][2] = array(add.257, add.367, id=1218, pos=[(1,21,9)])
  array.1215: bits[32][2] = array(add.507, add.617, id=1215, pos=[(1,21,9)])
  array.1197: bits[32][2][2] = array(array.1218, array.1215, id=1197, pos=[(1,21,9)])
  ret tuple.688: (bits[32][2][2], bits[32][2][2], bits[32][2][2]) = tuple(a, b, array.1197, id=688, pos=[(1,4,1)])
}
